{
  "version": "3.2",
  "log": [
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "dd1ef7e413977f5ba37e0736fd617d7d7ee1a856883e870bd1a475896bfb2137",
          "withoutMetadata": "a46e31d6e25b0dab97803c4cc60415dec6ab470bce2f8b9c33b0c9db5c692d2d",
          "linkedWithoutMetadata": "a46e31d6e25b0dab97803c4cc60415dec6ab470bce2f8b9c33b0c9db5c692d2d"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "approve(address,uint256)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)",
          "receiveApproval(address,uint256,bytes)",
          "receiveToken(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)32",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_approveCallState",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_tokenCallState",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:20"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)32": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "55071f66e7453988cb6c3dc2a6bf56ec56ea4c790619fbc0eec1159d2517d795",
          "withoutMetadata": "4a52e230b1d88914c930f23d2d270bae2df2ee5ff52344fd76739be9b843363e",
          "linkedWithoutMetadata": "4a52e230b1d88914c930f23d2d270bae2df2ee5ff52344fd76739be9b843363e"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "approve(address,uint256)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)",
          "receiveApproval(address,uint256,address,bytes)",
          "receiveToken(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)32",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_approveCallState",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_tokenCallState",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:20"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)32": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContractCallFallBack": {
        "src": "contracts/Yuteng.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveApproval(address,uint256,address,bytes)",
          "receiveToken(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:26",
        "version": {
          "withMetadata": "8dda87c0b9c0c2f09698c5c84584dabe43576705f451d95f8c6ede562a7933c7",
          "withoutMetadata": "3e7419fdc8dc396dbe02d1aa90e463a95a98010aaffcc93c855137a9091bddbd",
          "linkedWithoutMetadata": "3e7419fdc8dc396dbe02d1aa90e463a95a98010aaffcc93c855137a9091bddbd"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approveAndCall(address,uint256,bytes)",
          "transferAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContractCallFallBack": {
        "src": "contracts/Yuteng.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveApproval(address,uint256,address,bytes)",
          "receiveToken(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:20",
        "version": {
          "withMetadata": "826686c8726ea3b7430e206ae98d80d9852804933e78871a2182c54df2e273cb",
          "withoutMetadata": "fdced8965dd1f9c3ee252dbf8a136b1321fcec207a211e8f3ba17aa40fda3a04",
          "linkedWithoutMetadata": "fdced8965dd1f9c3ee252dbf8a136b1321fcec207a211e8f3ba17aa40fda3a04"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approveAndCall(address,uint256,bytes)",
          "transferAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "7604ecb13869ecfdaf253ab9a4749af753b6cbf167993322a434dcc972b6d3d3",
          "withoutMetadata": "8c3249b7328c3fb906d1b3be0e42e6a947401f690b06c69e8359a7dc5141554a",
          "linkedWithoutMetadata": "8c3249b7328c3fb906d1b3be0e42e6a947401f690b06c69e8359a7dc5141554a"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "approve(address,uint256)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)",
          "receiveApproval(address,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)32",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_approveCallState",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)32": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "abee4778cb62d0a76745325f3521c11bcd640d02e6c4eadac009f08352cf631f",
          "withoutMetadata": "4f39e9fa4cac31ce50881bf79de0eba74368b8d6cd70485820a34e16ada15f86",
          "linkedWithoutMetadata": "4f39e9fa4cac31ce50881bf79de0eba74368b8d6cd70485820a34e16ada15f86"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "approve(address,uint256)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)",
          "receiveApproval(address,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)32",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_approveCallState",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)32": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "953193b2b292515998803bd41d0584c99ab1c17aed14105cde196e4ec0e1cd04",
          "withoutMetadata": "0a255600d5f6dd4365b768d0d2b9d84c2a6ffaf92e354e8f025dc6a4850804fe",
          "linkedWithoutMetadata": "0a255600d5f6dd4365b768d0d2b9d84c2a6ffaf92e354e8f025dc6a4850804fe"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "approve(address,uint256)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)",
          "receiveApproval(address,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)917",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_approveCallState",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)917": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ApproveAndCallFallBack": {
        "src": "contracts/Yuteng.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveApproval(address,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:19",
        "version": {
          "withMetadata": "e5c71cce16772688b54a5451ec09fbade95236ede2ecb51ee975bcb522294e15",
          "withoutMetadata": "78ad5c718b779fa026cf0463225c44f66c6503a72349f7fa5e6aa1fbc0d81ba0",
          "linkedWithoutMetadata": "78ad5c718b779fa026cf0463225c44f66c6503a72349f7fa5e6aa1fbc0d81ba0"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "a10e5be9a52afe627239ea0420ac6e01c7b65a797852aec6d40707f99bca3c87",
          "withoutMetadata": "0a255600d5f6dd4365b768d0d2b9d84c2a6ffaf92e354e8f025dc6a4850804fe",
          "linkedWithoutMetadata": "0a255600d5f6dd4365b768d0d2b9d84c2a6ffaf92e354e8f025dc6a4850804fe"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "approve(address,uint256)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)",
          "receiveApproval(address,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)917",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_approveCallState",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)917": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ApproveAndCallFallBack": {
        "src": "contracts/Yuteng.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "receiveApproval(address,uint256,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:19",
        "version": {
          "withMetadata": "506be209635abf2f6991dbafb73380ba0aaa954dadecab853d3906daa82dbed4",
          "withoutMetadata": "78ad5c718b779fa026cf0463225c44f66c6503a72349f7fa5e6aa1fbc0d81ba0",
          "linkedWithoutMetadata": "78ad5c718b779fa026cf0463225c44f66c6503a72349f7fa5e6aa1fbc0d81ba0"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "e6ca713b7264e703941dca53df3bd05a26c28e8e7b9108045037d1bba22d0a17",
          "withoutMetadata": "78cfdcf0fb335795bf25d1062c44e0791a657550851f5da879f3ea6eddb2c141",
          "linkedWithoutMetadata": "78cfdcf0fb335795bf25d1062c44e0791a657550851f5da879f3ea6eddb2c141"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "a1061d98ee6ba0664ee67acd27c3fc74e8a98a63ae4a09f6f8e860806c7e5a26",
          "withoutMetadata": "c0d3cd695804ac17415ad7c4b28c02bff8247ff6ec5ac38e5ee11cda4fdfa8ee",
          "linkedWithoutMetadata": "c0d3cd695804ac17415ad7c4b28c02bff8247ff6ec5ac38e5ee11cda4fdfa8ee"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "approve(address,uint256)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)32",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)32": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "cdc3fca87d7b12e68d29a8e6cd6c33d1dbed55f4d645b6d42cf686c9cd4b3aae",
          "withoutMetadata": "c0d3cd695804ac17415ad7c4b28c02bff8247ff6ec5ac38e5ee11cda4fdfa8ee",
          "linkedWithoutMetadata": "c0d3cd695804ac17415ad7c4b28c02bff8247ff6ec5ac38e5ee11cda4fdfa8ee"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "approve(address,uint256)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)32",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)32": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "6d5bc5b86896bf738add9c029a5df26e638d1124bbc89019183aafd7005a60b3",
          "withoutMetadata": "c0d3cd695804ac17415ad7c4b28c02bff8247ff6ec5ac38e5ee11cda4fdfa8ee",
          "linkedWithoutMetadata": "c0d3cd695804ac17415ad7c4b28c02bff8247ff6ec5ac38e5ee11cda4fdfa8ee"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "approve(address,uint256)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)917",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)917": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "b834a0ea4c47eecad49ec7ef5bbe24ff64ce456c000924b73f5e21ad30d90cdf",
          "withoutMetadata": "6b09224a49f6210db2815d3539042fb36462b381f5deff8059ca9c784309212f",
          "linkedWithoutMetadata": "6b09224a49f6210db2815d3539042fb36462b381f5deff8059ca9c784309212f"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "19565535ca0cd9152e4bd7eed6045f2913db0754bac7d1c11c539973b2e1ece7",
          "withoutMetadata": "ec885c659cc0c4535b1051bee104d6e4411ae8c28d85fe66f224273c540e7f1b",
          "linkedWithoutMetadata": "ec885c659cc0c4535b1051bee104d6e4411ae8c28d85fe66f224273c540e7f1b"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "69d9fcb7cce87bf230a2ae4fed8eb96f06204b3dc6ebdf2a4a26b1acf3a3edf9",
          "withoutMetadata": "5a9da4c7961ea8f63a7815447fd6af47f2797db1b7d8bbd85addda2ee2a6052b",
          "linkedWithoutMetadata": "5a9da4c7961ea8f63a7815447fd6af47f2797db1b7d8bbd85addda2ee2a6052b"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "0beb6113d5aa20421f06323f7740e413c5111b932e41595dd127dda106ce2041",
          "withoutMetadata": "2c37f080ce7300aee3e13761bf9f58aede1533c3d19fdc8d9c8edb049bdfdd5c",
          "linkedWithoutMetadata": "2c37f080ce7300aee3e13761bf9f58aede1533c3d19fdc8d9c8edb049bdfdd5c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "b0e4d02f74951205d5f720c3ee40e780a18e330f3fa61c16ca2ad5ff57051940",
          "withoutMetadata": "f6bb97704c22eaaf7dc175c427fa64f3bd2a637ed6578aa98bfb57606e6561c5",
          "linkedWithoutMetadata": "f6bb97704c22eaaf7dc175c427fa64f3bd2a637ed6578aa98bfb57606e6561c5"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "fda86ebccef414b70be600ca0add7e00566a7a0b5a0dcb2346ea586f391be126",
          "withoutMetadata": "64c08870b23a45fb826eabb7e5f6e86e8899478e9df25a6affe7b46bcea78e45",
          "linkedWithoutMetadata": "64c08870b23a45fb826eabb7e5f6e86e8899478e9df25a6affe7b46bcea78e45"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "48ef369a6a68d13d9818bead745bee3f66921c250cd53b3f98a6a03234883a30",
          "withoutMetadata": "c0d3cd695804ac17415ad7c4b28c02bff8247ff6ec5ac38e5ee11cda4fdfa8ee",
          "linkedWithoutMetadata": "c0d3cd695804ac17415ad7c4b28c02bff8247ff6ec5ac38e5ee11cda4fdfa8ee"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "approve(address,uint256)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)32",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:26"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)32": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "18f17a45c79c6f5678edd6d992aade850b674cbdabbc20b155611d4bff34d35f",
          "withoutMetadata": "c0d3cd695804ac17415ad7c4b28c02bff8247ff6ec5ac38e5ee11cda4fdfa8ee",
          "linkedWithoutMetadata": "c0d3cd695804ac17415ad7c4b28c02bff8247ff6ec5ac38e5ee11cda4fdfa8ee"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "approve(address,uint256)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)32",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:26"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)32": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "T4": {
        "src": "contracts/T4.sol:3",
        "version": {
          "withMetadata": "cf050915d8b4d7d52b4cfd9de5d70389b53ee26eda906b7590ca4341c9c23c05",
          "withoutMetadata": "6632d3c9edb0c6d1110a7bacabcf929d8d9121d2eb34e0fe55723c9440014264",
          "linkedWithoutMetadata": "6632d3c9edb0c6d1110a7bacabcf929d8d9121d2eb34e0fe55723c9440014264"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getCuurentAge()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T4",
            "src": "contracts/T4.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T4",
              "label": "age",
              "type": "t_uint256",
              "src": "contracts/T4.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "5f21aea09848da3b84dc3e60a346011e0a1f728346f627d801e69ebb6ede0309",
          "withoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862",
          "linkedWithoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "97b25eb770f22bf8f75b2432df0ffd58eeab91813f159b6ea4aea4caea7cfc8d",
          "withoutMetadata": "c2b1d1d6d2a10cd21f25ec513446c2c489a1e79e2e2c48a2cfc6a5b14a2e02cb",
          "linkedWithoutMetadata": "c2b1d1d6d2a10cd21f25ec513446c2c489a1e79e2e2c48a2cfc6a5b14a2e02cb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)954",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)954": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "33009e37a25f6363c2b491ebb107e920e1493ff63e77ec2d7379fdca6600269d",
          "withoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862",
          "linkedWithoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Usdt": {
        "src": "contracts/Usdt.sol:13",
        "version": {
          "withMetadata": "5f88efe71c7c4d58e56334a55a806dcdd23677dba930705c085f6db3f4469826",
          "withoutMetadata": "8330e950012fca8ff53ea2a48fb1eda6d1a0dda724f60db2047557c81fb9b151",
          "linkedWithoutMetadata": "8330e950012fca8ff53ea2a48fb1eda6d1a0dda724f60db2047557c81fb9b151"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Usdt",
            "src": "contracts/Usdt.sol:19"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "eeefb285aa21fdf977c9d759217b09a6f2c4db1af81ddff912cafe7a63e9159e",
          "withoutMetadata": "64c08870b23a45fb826eabb7e5f6e86e8899478e9df25a6affe7b46bcea78e45",
          "linkedWithoutMetadata": "64c08870b23a45fb826eabb7e5f6e86e8899478e9df25a6affe7b46bcea78e45"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "0e0f1f7f68725131cb1272f653b891759d525fa985016ed064f0457b6205b6a8",
          "withoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042",
          "linkedWithoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV2": {
        "src": "contracts/YutengV2.sol:5",
        "version": {
          "withMetadata": "7f67e0aa8e1798033a6a3ccbc90a5b06863fa81022a17b729213660e2b1920ee",
          "withoutMetadata": "09af6372cdda2ce9f08cae90d146806bcbaaa744e75b8de8f97b9cb8d8f9e571",
          "linkedWithoutMetadata": "09af6372cdda2ce9f08cae90d146806bcbaaa744e75b8de8f97b9cb8d8f9e571"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "setsCcore(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV2",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV2.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "33009e37a25f6363c2b491ebb107e920e1493ff63e77ec2d7379fdca6600269d",
          "withoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862",
          "linkedWithoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "5e8bef40dd6238c90ad0f9e08242714a53e2afb60482621d673fa3cfd1ad0fef",
          "withoutMetadata": "f8646c1ec716fbd6d529f32ef789a1f3593189c8aa46ea3603ed68e94058432d",
          "linkedWithoutMetadata": "f8646c1ec716fbd6d529f32ef789a1f3593189c8aa46ea3603ed68e94058432d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "a5a2984a5b670864b52d177c2ed5f059674df7e168f57f33ee6d039299ec7223",
          "withoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862",
          "linkedWithoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "33009e37a25f6363c2b491ebb107e920e1493ff63e77ec2d7379fdca6600269d",
          "withoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862",
          "linkedWithoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "dea174de7972e67a22258fa02c7a8c6f21c819dbe7176cf958e72138cedfd22b",
          "withoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862",
          "linkedWithoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "33009e37a25f6363c2b491ebb107e920e1493ff63e77ec2d7379fdca6600269d",
          "withoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862",
          "linkedWithoutMetadata": "a7b7b5a387e440a94f0ba62abce3e3b7088fadccc3dff75160085d502a54b862"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "db24b36c41b1d1e96b89ebfdf18268f56966717b24ccd99099fb2d94a92991f6",
          "withoutMetadata": "00f4b5d58a380aad27a5b01750360c7a1c82e1981016a56b7bfcc7a1ad1f66bb",
          "linkedWithoutMetadata": "00f4b5d58a380aad27a5b01750360c7a1c82e1981016a56b7bfcc7a1ad1f66bb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "90a6006b94f25c3d26562db14c8031a9ffffd0e0dda53df38e528def7b976ab2",
          "withoutMetadata": "d8be4baa0386baa802dc2f725f43e88a06852a5b7efb713233df6af7056c5247",
          "linkedWithoutMetadata": "d8be4baa0386baa802dc2f725f43e88a06852a5b7efb713233df6af7056c5247"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "c30d3cace97eea0a60539abe0da0596d25112d609a0b50f6cc08d75fad00bfca",
          "withoutMetadata": "d8be4baa0386baa802dc2f725f43e88a06852a5b7efb713233df6af7056c5247",
          "linkedWithoutMetadata": "d8be4baa0386baa802dc2f725f43e88a06852a5b7efb713233df6af7056c5247"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "87abaa6852814f71978859e13a09ad58e8d66071ccf96945561e8b73d3235fb5",
          "withoutMetadata": "00f4b5d58a380aad27a5b01750360c7a1c82e1981016a56b7bfcc7a1ad1f66bb",
          "linkedWithoutMetadata": "00f4b5d58a380aad27a5b01750360c7a1c82e1981016a56b7bfcc7a1ad1f66bb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "1136e35a88fd53c290d0946c17b77d004e6bb4ecf72d97b0015bde8ed8f11284",
          "withoutMetadata": "281ba48a0b2cb5850eba19479f19f622bf162326327c88d0e3fedcec7f96a6fb",
          "linkedWithoutMetadata": "281ba48a0b2cb5850eba19479f19f622bf162326327c88d0e3fedcec7f96a6fb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "90a6006b94f25c3d26562db14c8031a9ffffd0e0dda53df38e528def7b976ab2",
          "withoutMetadata": "d8be4baa0386baa802dc2f725f43e88a06852a5b7efb713233df6af7056c5247",
          "linkedWithoutMetadata": "d8be4baa0386baa802dc2f725f43e88a06852a5b7efb713233df6af7056c5247"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "97b25eb770f22bf8f75b2432df0ffd58eeab91813f159b6ea4aea4caea7cfc8d",
          "withoutMetadata": "c2b1d1d6d2a10cd21f25ec513446c2c489a1e79e2e2c48a2cfc6a5b14a2e02cb",
          "linkedWithoutMetadata": "c2b1d1d6d2a10cd21f25ec513446c2c489a1e79e2e2c48a2cfc6a5b14a2e02cb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)954",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)954": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "9f036afdd26a31a28cda35c902deafe1036ddd17895373bb6f65693c392ab690",
          "withoutMetadata": "2b05d8d1cf0c6759c7da41198b8b367bae64dcc22465da823f547f3f6133cfd5",
          "linkedWithoutMetadata": "2b05d8d1cf0c6759c7da41198b8b367bae64dcc22465da823f547f3f6133cfd5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Usdt": {
        "src": "contracts/Usdt.sol:13",
        "version": {
          "withMetadata": "5f88efe71c7c4d58e56334a55a806dcdd23677dba930705c085f6db3f4469826",
          "withoutMetadata": "8330e950012fca8ff53ea2a48fb1eda6d1a0dda724f60db2047557c81fb9b151",
          "linkedWithoutMetadata": "8330e950012fca8ff53ea2a48fb1eda6d1a0dda724f60db2047557c81fb9b151"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Usdt",
            "src": "contracts/Usdt.sol:19"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "eeefb285aa21fdf977c9d759217b09a6f2c4db1af81ddff912cafe7a63e9159e",
          "withoutMetadata": "64c08870b23a45fb826eabb7e5f6e86e8899478e9df25a6affe7b46bcea78e45",
          "linkedWithoutMetadata": "64c08870b23a45fb826eabb7e5f6e86e8899478e9df25a6affe7b46bcea78e45"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "0e0f1f7f68725131cb1272f653b891759d525fa985016ed064f0457b6205b6a8",
          "withoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042",
          "linkedWithoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV2": {
        "src": "contracts/YutengV2.sol:5",
        "version": {
          "withMetadata": "7f67e0aa8e1798033a6a3ccbc90a5b06863fa81022a17b729213660e2b1920ee",
          "withoutMetadata": "09af6372cdda2ce9f08cae90d146806bcbaaa744e75b8de8f97b9cb8d8f9e571",
          "linkedWithoutMetadata": "09af6372cdda2ce9f08cae90d146806bcbaaa744e75b8de8f97b9cb8d8f9e571"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "setsCcore(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV2",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV2.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "97b25eb770f22bf8f75b2432df0ffd58eeab91813f159b6ea4aea4caea7cfc8d",
          "withoutMetadata": "c2b1d1d6d2a10cd21f25ec513446c2c489a1e79e2e2c48a2cfc6a5b14a2e02cb",
          "linkedWithoutMetadata": "c2b1d1d6d2a10cd21f25ec513446c2c489a1e79e2e2c48a2cfc6a5b14a2e02cb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "T3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "9f036afdd26a31a28cda35c902deafe1036ddd17895373bb6f65693c392ab690",
          "withoutMetadata": "2b05d8d1cf0c6759c7da41198b8b367bae64dcc22465da823f547f3f6133cfd5",
          "linkedWithoutMetadata": "2b05d8d1cf0c6759c7da41198b8b367bae64dcc22465da823f547f3f6133cfd5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "T3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "T3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "5289583dc18013a691053e53f75a6960dac040d436e221dd3fa93bcb78a85662",
          "withoutMetadata": "4c0d1aa6e5c38913b1765642e536453a2f6dfd458f0f2bfbd4437eee64f944ab",
          "linkedWithoutMetadata": "4c0d1aa6e5c38913b1765642e536453a2f6dfd458f0f2bfbd4437eee64f944ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)70",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_contract(ERC20Interface)70": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PriceConsumerV3": {
        "src": "contracts/T3.sol:7",
        "version": {
          "withMetadata": "8f81d50534dda1872947b0eac4b13a448929992b7416d01fe2e7f950d5961811",
          "withoutMetadata": "2b05d8d1cf0c6759c7da41198b8b367bae64dcc22465da823f547f3f6133cfd5",
          "linkedWithoutMetadata": "2b05d8d1cf0c6759c7da41198b8b367bae64dcc22465da823f547f3f6133cfd5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PriceConsumerV3",
            "src": "contracts/T3.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "PriceConsumerV3",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/T3.sol:9"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "c146cb3bf3c151b5322829ddad7e01bd2b0ddf93cd1e6135fd7c2f0d76b985f2",
          "withoutMetadata": "b068227a01fa46547e59ef364c1a3c2971092f8d36c32671514b0c7e6eb55829",
          "linkedWithoutMetadata": "b068227a01fa46547e59ef364c1a3c2971092f8d36c32671514b0c7e6eb55829"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)70",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_contract(ERC20Interface)70": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "8fa3a96de47c975de1b7090a22ce52a9f590873e3dbc206f39fb8f1a5d8d73ff",
          "withoutMetadata": "dde045c0cbf39643c3535ac4399ab8ae8af82791ba505ad5fcdd361599f07d42",
          "linkedWithoutMetadata": "dde045c0cbf39643c3535ac4399ab8ae8af82791ba505ad5fcdd361599f07d42"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)70",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_contract(ERC20Interface)70": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "9507946fd448a8fbd4cb6bc94a048a32557f009393bb49db0d594decd8d0a570",
          "withoutMetadata": "c2b1d1d6d2a10cd21f25ec513446c2c489a1e79e2e2c48a2cfc6a5b14a2e02cb",
          "linkedWithoutMetadata": "c2b1d1d6d2a10cd21f25ec513446c2c489a1e79e2e2c48a2cfc6a5b14a2e02cb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "057a88c2f7ef1a79dce46630ed833b7196322266e38a16785d25d8bc30a3d87f",
          "withoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7",
          "linkedWithoutMetadata": "2b24d0496d2d4a0da4442b75304ad90c5b41d91304a08fd1ac8bddafe7dc65c7"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "67236993a853e1196f6ce651e407fb323c4b3ee12a7a49e1adda40256166a460",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "82b6a73fcbf5e17d3396b5193cfe5e63c252917afe7974a10dc46dcc8b954e21",
          "withoutMetadata": "d3759066e8e59be5b68fa609cc0f5353c593057c1442ad701262254082ea387e",
          "linkedWithoutMetadata": "d3759066e8e59be5b68fa609cc0f5353c593057c1442ad701262254082ea387e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)955",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_contract(ERC20Interface)955": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Usdt": {
        "src": "contracts/Usdt.sol:13",
        "version": {
          "withMetadata": "5f88efe71c7c4d58e56334a55a806dcdd23677dba930705c085f6db3f4469826",
          "withoutMetadata": "8330e950012fca8ff53ea2a48fb1eda6d1a0dda724f60db2047557c81fb9b151",
          "linkedWithoutMetadata": "8330e950012fca8ff53ea2a48fb1eda6d1a0dda724f60db2047557c81fb9b151"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Usdt",
            "src": "contracts/Usdt.sol:19"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "eeefb285aa21fdf977c9d759217b09a6f2c4db1af81ddff912cafe7a63e9159e",
          "withoutMetadata": "64c08870b23a45fb826eabb7e5f6e86e8899478e9df25a6affe7b46bcea78e45",
          "linkedWithoutMetadata": "64c08870b23a45fb826eabb7e5f6e86e8899478e9df25a6affe7b46bcea78e45"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "0e0f1f7f68725131cb1272f653b891759d525fa985016ed064f0457b6205b6a8",
          "withoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042",
          "linkedWithoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV2": {
        "src": "contracts/YutengV2.sol:5",
        "version": {
          "withMetadata": "7f67e0aa8e1798033a6a3ccbc90a5b06863fa81022a17b729213660e2b1920ee",
          "withoutMetadata": "09af6372cdda2ce9f08cae90d146806bcbaaa744e75b8de8f97b9cb8d8f9e571",
          "linkedWithoutMetadata": "09af6372cdda2ce9f08cae90d146806bcbaaa744e75b8de8f97b9cb8d8f9e571"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "setsCcore(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV2",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV2.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "445a6688e46933552093b777b60b91fe744f54cde5dbf323d66b22c9d18c4ccd",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "33e35fdd17cec7d52ad2221bbf41f1f7b38d81ecf514b4cc5ae37b7854a33b4d",
          "withoutMetadata": "0790b7b3581b3f5ae0c0208596aa524607f5f8b95c69abb06fe95c69ce35cc27",
          "linkedWithoutMetadata": "0790b7b3581b3f5ae0c0208596aa524607f5f8b95c69abb06fe95c69ce35cc27"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)70",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_contract(ERC20Interface)70": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "9e619077a8c82ba00296b8578da9d5a81bf2d2de089da19b726cd21845403d8b",
          "withoutMetadata": "e4ec548fd4582c6c134d98e6fac7f85fcf1d88e14cdd67b2e666dc5fdf564aac",
          "linkedWithoutMetadata": "e4ec548fd4582c6c134d98e6fac7f85fcf1d88e14cdd67b2e666dc5fdf564aac"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)",
          "getLatestPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)70",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_contract(ERC20Interface)70": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "343bf24a0dded3eb55499f8b313200abc40e2d9b1b0832b7570668fd8b7bdc4e",
          "withoutMetadata": "e74060d901dc7dc5d657968007b08c2e18883004f8baeafe90f2bae4eff7da57",
          "linkedWithoutMetadata": "e74060d901dc7dc5d657968007b08c2e18883004f8baeafe90f2bae4eff7da57"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)70",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_contract(ERC20Interface)70": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "becab516a001777bdaa2915e72b1720fce525c3ef983da5a0a4409ced2caa160",
          "withoutMetadata": "d895ad3a273b8a571daac17490cb7aa77b601385463ece20bb2c970f043b2357",
          "linkedWithoutMetadata": "d895ad3a273b8a571daac17490cb7aa77b601385463ece20bb2c970f043b2357"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)70",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_contract(ERC20Interface)70": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "3ccd0a37450fbe43bcf363e327a4b2fa5d6b43728732e8563ee45b539e7b65b6",
          "withoutMetadata": "124c1d10cb71e6a32fc2a71f449dd7915628c12947221691f0bc8732803f846f",
          "linkedWithoutMetadata": "124c1d10cb71e6a32fc2a71f449dd7915628c12947221691f0bc8732803f846f"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)70",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_contract(ERC20Interface)70": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "a46b62e9bad9e42bc93e9dd3255ea403ddcc7b6933dd8fff072c9948e5bfa107",
          "withoutMetadata": "ee5d6ef778079ae24b05b0d889ed7c7d4ebb5eaf032e366e45aa9064975de074",
          "linkedWithoutMetadata": "ee5d6ef778079ae24b05b0d889ed7c7d4ebb5eaf032e366e45aa9064975de074"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)70",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_contract(ERC20Interface)70": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "d31ad20e49c1265b8232a25dcdd95c9ba95a5ed9863d05e52adce664bc3ecc8c",
          "withoutMetadata": "d895ad3a273b8a571daac17490cb7aa77b601385463ece20bb2c970f043b2357",
          "linkedWithoutMetadata": "d895ad3a273b8a571daac17490cb7aa77b601385463ece20bb2c970f043b2357"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)70",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_contract(ERC20Interface)70": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "eb022dbf3bef4e7abd35d50d17dd7c9ae8dd83ea26dc8cec75f8dc124deeaa19",
          "withoutMetadata": "f69e8069b2fe8704b365fe506f52f3ce6c8af5f7cc04e5dd3df24aefad1de7a9",
          "linkedWithoutMetadata": "f69e8069b2fe8704b365fe506f52f3ce6c8af5f7cc04e5dd3df24aefad1de7a9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)70",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_contract(ERC20Interface)70": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "d31ad20e49c1265b8232a25dcdd95c9ba95a5ed9863d05e52adce664bc3ecc8c",
          "withoutMetadata": "d895ad3a273b8a571daac17490cb7aa77b601385463ece20bb2c970f043b2357",
          "linkedWithoutMetadata": "d895ad3a273b8a571daac17490cb7aa77b601385463ece20bb2c970f043b2357"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "priceFeed",
              "type": "t_contract(AggregatorV3Interface)45",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)70",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:19"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:27"
            }
          ],
          "types": {
            "t_contract(AggregatorV3Interface)45": {
              "label": "contract AggregatorV3Interface"
            },
            "t_contract(ERC20Interface)70": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "2d98c483626b8e3550a1657fce16a815a2bc25375ffd83341159423d8c330477",
          "withoutMetadata": "815ad4b32a1a49bf79dd1d4919f02dfa6a774b15004e00f6fd2886c4a3ae8ac8",
          "linkedWithoutMetadata": "815ad4b32a1a49bf79dd1d4919f02dfa6a774b15004e00f6fd2886c4a3ae8ac8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)70",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:18"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:26"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)70": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "5f3664bf8e28026a9267ef87668f5e5f87f7c48da5eca9b8017021d7575c474f",
          "withoutMetadata": "815ad4b32a1a49bf79dd1d4919f02dfa6a774b15004e00f6fd2886c4a3ae8ac8",
          "linkedWithoutMetadata": "815ad4b32a1a49bf79dd1d4919f02dfa6a774b15004e00f6fd2886c4a3ae8ac8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)908",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)908": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Usdt": {
        "src": "contracts/Usdt.sol:13",
        "version": {
          "withMetadata": "bbc68b2fee4b87c02e071c98db697761ea186d7a935d4ac0a53ee8320a3de3e8",
          "withoutMetadata": "ef15f7bf1af7f9b9ff394e18751aff2225589c190678cb7255d1269a3473f38e",
          "linkedWithoutMetadata": "ef15f7bf1af7f9b9ff394e18751aff2225589c190678cb7255d1269a3473f38e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Usdt",
            "src": "contracts/Usdt.sol:19"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "3593906876d96a3179c5070589fd169a1405e56189f16cd83c5f1cb3f6e8fc76",
          "withoutMetadata": "8e27e76a549c66e09168bdabbad9c731b72a77f1d56cb6b5e2542e125827af4e",
          "linkedWithoutMetadata": "8e27e76a549c66e09168bdabbad9c731b72a77f1d56cb6b5e2542e125827af4e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "93601aa43a1f37a733828dd88ea36ca9c71a48ad2c3d33f67ac2f9fd1cb2e45c",
          "withoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042",
          "linkedWithoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV2": {
        "src": "contracts/YutengV2.sol:5",
        "version": {
          "withMetadata": "b9d998911c36bba1456d7b0ddeba4eeeecac46c0c91da1fbe729b40d84a3e3f4",
          "withoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a",
          "linkedWithoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "setsCcore(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV2",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV2.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "5f3664bf8e28026a9267ef87668f5e5f87f7c48da5eca9b8017021d7575c474f",
          "withoutMetadata": "815ad4b32a1a49bf79dd1d4919f02dfa6a774b15004e00f6fd2886c4a3ae8ac8",
          "linkedWithoutMetadata": "815ad4b32a1a49bf79dd1d4919f02dfa6a774b15004e00f6fd2886c4a3ae8ac8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToTokenLock",
            "src": "contracts/SwapToken.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToTokenLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:25"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "1485e1a5ff8a43f1b96de9297aeef747af9e9eea5c7e44f76df17b04626d5c67",
          "withoutMetadata": "6dc2c35d47696fb25f99fcbf23045a9b1e0565a3ba833d689ab2d4ca16ac0764",
          "linkedWithoutMetadata": "6dc2c35d47696fb25f99fcbf23045a9b1e0565a3ba833d689ab2d4ca16ac0764"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "d88cae29d64b42ab2b2ff88b169ff418d5ba1b06881f031143eb609528642b62",
          "withoutMetadata": "3ad7874e2af5b8b088fa64e9e9ff62a6b0cc3886ba2c3be27aac41492b03d933",
          "linkedWithoutMetadata": "3ad7874e2af5b8b088fa64e9e9ff62a6b0cc3886ba2c3be27aac41492b03d933"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "1485e1a5ff8a43f1b96de9297aeef747af9e9eea5c7e44f76df17b04626d5c67",
          "withoutMetadata": "6dc2c35d47696fb25f99fcbf23045a9b1e0565a3ba833d689ab2d4ca16ac0764",
          "linkedWithoutMetadata": "6dc2c35d47696fb25f99fcbf23045a9b1e0565a3ba833d689ab2d4ca16ac0764"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "7af204bf8e4cf2dbfc71ec247b012e907c2d148f50b1348ef14f4705a05c61b4",
          "withoutMetadata": "5f6ca0f52b2107586f44c24f6e35941f641464f3a22c261a769aecb704e157a7",
          "linkedWithoutMetadata": "5f6ca0f52b2107586f44c24f6e35941f641464f3a22c261a769aecb704e157a7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "2e3edf4e862fb5980439655a2d9b6c47bb6ef70165fdbc971f8204b7210daaf1",
          "withoutMetadata": "419244aecbbaa51ca583bd9ba2c1b5dc61abda1982090928c72f494b0f88981f",
          "linkedWithoutMetadata": "419244aecbbaa51ca583bd9ba2c1b5dc61abda1982090928c72f494b0f88981f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "8100d749341fe75ab72710ffe1aa27e6867656f1eccf7c25ef451da7b42d69f5",
          "withoutMetadata": "d5430c331304dc322472c31b57a40e574b212d60d4c0346395ec55bfe7d3427a",
          "linkedWithoutMetadata": "d5430c331304dc322472c31b57a40e574b212d60d4c0346395ec55bfe7d3427a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "2e3edf4e862fb5980439655a2d9b6c47bb6ef70165fdbc971f8204b7210daaf1",
          "withoutMetadata": "419244aecbbaa51ca583bd9ba2c1b5dc61abda1982090928c72f494b0f88981f",
          "linkedWithoutMetadata": "419244aecbbaa51ca583bd9ba2c1b5dc61abda1982090928c72f494b0f88981f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "7af204bf8e4cf2dbfc71ec247b012e907c2d148f50b1348ef14f4705a05c61b4",
          "withoutMetadata": "5f6ca0f52b2107586f44c24f6e35941f641464f3a22c261a769aecb704e157a7",
          "linkedWithoutMetadata": "5f6ca0f52b2107586f44c24f6e35941f641464f3a22c261a769aecb704e157a7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "16cb16c4893b35bddaf754f9bf7cfedd38b6266e208d1e5ebb7f53ea40648718",
          "withoutMetadata": "3ca994b26baa487453925440f2f9ba215603db769aedee25aab255745efc766a",
          "linkedWithoutMetadata": "3ca994b26baa487453925440f2f9ba215603db769aedee25aab255745efc766a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "e2e893396b2990df11a5444c4485037b23f51908219f50fb9b64acb98fd039e3",
          "withoutMetadata": "c2be05fce0a2d974b8ec43ecf89777b8d3a6e7b5f1e7a1d245527a65b8b5f9c2",
          "linkedWithoutMetadata": "c2be05fce0a2d974b8ec43ecf89777b8d3a6e7b5f1e7a1d245527a65b8b5f9c2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Usdt": {
        "src": "contracts/Usdt.sol:13",
        "version": {
          "withMetadata": "bbc68b2fee4b87c02e071c98db697761ea186d7a935d4ac0a53ee8320a3de3e8",
          "withoutMetadata": "ef15f7bf1af7f9b9ff394e18751aff2225589c190678cb7255d1269a3473f38e",
          "linkedWithoutMetadata": "ef15f7bf1af7f9b9ff394e18751aff2225589c190678cb7255d1269a3473f38e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Usdt",
            "src": "contracts/Usdt.sol:19"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Usdt.sol:13",
        "version": {
          "withMetadata": "b6295e277e8e74eca1a180d332b3a0bb1d64f7c126dd022ec21f890bf33fc847",
          "withoutMetadata": "ef15f7bf1af7f9b9ff394e18751aff2225589c190678cb7255d1269a3473f38e",
          "linkedWithoutMetadata": "ef15f7bf1af7f9b9ff394e18751aff2225589c190678cb7255d1269a3473f38e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Usdt.sol:19"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "d48861ed65c21b06a3e9623a6a1608b12131d22bb65c9d694fd7420efc4d541d",
          "withoutMetadata": "af26d0f4644f3cf58349d258a68c79b41d7cb138b2c03199d7e9c1d96da08ce5",
          "linkedWithoutMetadata": "af26d0f4644f3cf58349d258a68c79b41d7cb138b2c03199d7e9c1d96da08ce5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)",
          "tokenToToken(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:14",
        "version": {
          "withMetadata": "8ff347cba13eff99c18a1ed3fe75a6f91ac05fe1294d719ed9084a5641624ac3",
          "withoutMetadata": "204453df6ef70b521a9673982974d1e0f8f83b92dd4e08c217ea980361851a23",
          "linkedWithoutMetadata": "204453df6ef70b521a9673982974d1e0f8f83b92dd4e08c217ea980361851a23"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:26"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)23",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:24"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)23": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "c16f20117d02e650665acddb52a73dd1288fc1f6c471f6de163c6e8379c34fcd",
          "withoutMetadata": "699c842a6c338780882a4f06277d18596146860baadb2edac1b327623030d24e",
          "linkedWithoutMetadata": "699c842a6c338780882a4f06277d18596146860baadb2edac1b327623030d24e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "98935cf8353f1acc6212943f3e96af97081e7f042e4bb7cb9024aee29946fd7d",
          "withoutMetadata": "db5fa38248c53d779f6816901430dbc17bf0c06fcb57b17928a5b896c9be8eec",
          "linkedWithoutMetadata": "db5fa38248c53d779f6816901430dbc17bf0c06fcb57b17928a5b896c9be8eec"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)",
          "ethToToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "520136c87808c586447a2455fce661a292b8c4d636ec34e4449535207709f714",
          "withoutMetadata": "7373282bfab1cd52d6247bbd2045799bc7d922815f1ef71e5762f83da04dc2b6",
          "linkedWithoutMetadata": "7373282bfab1cd52d6247bbd2045799bc7d922815f1ef71e5762f83da04dc2b6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "6f39f7391b4a587690a63ec29a871acf3babd657c1024d4b6ea804c226d3d9ed",
          "withoutMetadata": "fe8cca5a138043c03c02e74a348928ae3adf9ebd76267e941963181115bfb9c0",
          "linkedWithoutMetadata": "fe8cca5a138043c03c02e74a348928ae3adf9ebd76267e941963181115bfb9c0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "5b14fa3df27a8d3077383f69214ca171a9d07099895a3131c240cdaea24f394e",
          "withoutMetadata": "8d159bbe9f83dfc9036b7683815847163f26eed3bb8ebfbaa57195cecd78cb91",
          "linkedWithoutMetadata": "8d159bbe9f83dfc9036b7683815847163f26eed3bb8ebfbaa57195cecd78cb91"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "d2d8eed5a389a394d7d67ef96e49d06070ff482f6dbb4390985bb044bb9f7d7d",
          "withoutMetadata": "9039786d34b5a63fe18072739e0603e1e59eb3d1c3cf20b97b7968561aebad7e",
          "linkedWithoutMetadata": "9039786d34b5a63fe18072739e0603e1e59eb3d1c3cf20b97b7968561aebad7e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "886fbc1ed2e2b56b078b5bb30ad1b9b84fa301c9d08eec4294bf211e2a54daec",
          "withoutMetadata": "c1f9ddd0c092f53af92019b6f2d693d3bd84741da08cb709f4f567bacabdf3b3",
          "linkedWithoutMetadata": "c1f9ddd0c092f53af92019b6f2d693d3bd84741da08cb709f4f567bacabdf3b3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "b0af10249fd24acfcd9b5223a31af22a8d77de45c9941fe435b8979da06be2bb",
          "withoutMetadata": "afa03bc6397733d9584363f3b6150a3c179aaeb84c549501b43b4a68cbf25dac",
          "linkedWithoutMetadata": "afa03bc6397733d9584363f3b6150a3c179aaeb84c549501b43b4a68cbf25dac"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "863bdbb5abb6807afffad15482cea952415c5bf036895ec3d33f9cd6ac8a452f",
          "withoutMetadata": "29f7d439299bd75b3f0031dc11b173439864dd6ecec12d45629433113267b4c7",
          "linkedWithoutMetadata": "29f7d439299bd75b3f0031dc11b173439864dd6ecec12d45629433113267b4c7"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "4c1981bfa55e4c8b3cb340fb0dcc7ee870cd9a992b999b4b4f514c85fbb28aef",
          "withoutMetadata": "456690e1c10c785475dc0b60b5a35c8bee01f147d463c514719f8832e254edbd",
          "linkedWithoutMetadata": "456690e1c10c785475dc0b60b5a35c8bee01f147d463c514719f8832e254edbd"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "52e758eb5c80e11cf9cf1a35f20efb6ca751cbae0f863dfa54a8916e164aeebc",
          "withoutMetadata": "0f53a122ff95d6cb884ab9d058e6779fb3062297c0238addb78bf120b6532e4f",
          "linkedWithoutMetadata": "0f53a122ff95d6cb884ab9d058e6779fb3062297c0238addb78bf120b6532e4f"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "beea51d4dfb45e96a496b7a672f359bc364e2b2ade14dcfb75ce251764dc3eb2",
          "withoutMetadata": "fccfb0997db2e449418993702e47f7a175c16c7d768fc4e5dacbcb6cf280aa32",
          "linkedWithoutMetadata": "fccfb0997db2e449418993702e47f7a175c16c7d768fc4e5dacbcb6cf280aa32"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "5958da714891fd82e115207f749812007cedc5df8aa191dc6b230c250fa5457a",
          "withoutMetadata": "8a9474c7b3df258360913dcf6549392a067fa963517c4fb4c78fd9eb9625f262",
          "linkedWithoutMetadata": "8a9474c7b3df258360913dcf6549392a067fa963517c4fb4c78fd9eb9625f262"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "7663a513f6ec5dc6693b6f8c4224cd06bd20ad5488ac4e8cf7e5cd54fbd21e28",
          "withoutMetadata": "75c24c20dff0ee4e314653d8c7ecb5f20b3346f23639f8cc3431b3301d2d5d3a",
          "linkedWithoutMetadata": "75c24c20dff0ee4e314653d8c7ecb5f20b3346f23639f8cc3431b3301d2d5d3a"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "a7becc98dadc955fb3067c99f30dd34c8daf6224619ac4534291fe02ee48961e",
          "withoutMetadata": "6f43d6a34ff53594c0822004c089e64876c0bd85f2c23062bee1e7e774c18b5d",
          "linkedWithoutMetadata": "6f43d6a34ff53594c0822004c089e64876c0bd85f2c23062bee1e7e774c18b5d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "71d8ff1448b7f1136d315cb18a28466ccd1bb57e0c17ec34dcc2758f0fafa842",
          "withoutMetadata": "f3ea5a3cf2bc3642b9767c753ee38423303b5c15b9ad74fef095e1aa88653a7e",
          "linkedWithoutMetadata": "f3ea5a3cf2bc3642b9767c753ee38423303b5c15b9ad74fef095e1aa88653a7e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "b923d6050f910a1827eba7a462c06da69221b36e066ee6f7a29595d346e4eab5",
          "withoutMetadata": "1369a4d8b61c6eee6bae40775a827b732e3b9a86cee47d93b59186abdef1c5df",
          "linkedWithoutMetadata": "1369a4d8b61c6eee6bae40775a827b732e3b9a86cee47d93b59186abdef1c5df"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "bf7aff8a4cfe74306bd14ea14403c9bf2f67e0df21acde29de0adee6a33170e1",
          "withoutMetadata": "12df12f450593b1d5ff8b2e6cd6ad2229f9fd7ef1f6f4e8ba2b2f128e8cff642",
          "linkedWithoutMetadata": "12df12f450593b1d5ff8b2e6cd6ad2229f9fd7ef1f6f4e8ba2b2f128e8cff642"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "approve(uint256)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:25"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "tokenToEthLock",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "tokenToEthLock",
              "type": "t_bool",
              "src": "contracts/SwapToken.sol:23"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "54c648271f31acb92cbc9232be7fb07ff5adfd8f26b7b4ae421ca57d4aa9ccd8",
          "withoutMetadata": "b02b6080c5eebd527c671dc01b7b29754053f50dde98bca026409d18925b223c",
          "linkedWithoutMetadata": "b02b6080c5eebd527c671dc01b7b29754053f50dde98bca026409d18925b223c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "82cc9f99f774a761a68844300ef997a89106c087306487a5a4a2676c1b850aa3",
          "withoutMetadata": "3376b5db45adbd6220081955deb365f90b9005917d4c58dcb90ba5502f455434",
          "linkedWithoutMetadata": "3376b5db45adbd6220081955deb365f90b9005917d4c58dcb90ba5502f455434"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "54c648271f31acb92cbc9232be7fb07ff5adfd8f26b7b4ae421ca57d4aa9ccd8",
          "withoutMetadata": "b02b6080c5eebd527c671dc01b7b29754053f50dde98bca026409d18925b223c",
          "linkedWithoutMetadata": "b02b6080c5eebd527c671dc01b7b29754053f50dde98bca026409d18925b223c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "c5e2101771a713b9f5280e09c31b5e4f3ca5602e1ff186b101af065adddfc22a",
          "withoutMetadata": "af15bbd9dbc879662a341c85510b57035aaa8634f614343d6f9befbf7618f865",
          "linkedWithoutMetadata": "af15bbd9dbc879662a341c85510b57035aaa8634f614343d6f9befbf7618f865"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "91417de627a5dc321d0fd802c41b35b07407e76e4afacb38ecc8d8efc325dd51",
          "withoutMetadata": "15b678703191d26aa151d0a67329d347b0574e0a9f9ee54033bfd3601b168c3d",
          "linkedWithoutMetadata": "15b678703191d26aa151d0a67329d347b0574e0a9f9ee54033bfd3601b168c3d"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "6371727bc271ff4c3b50d5aff105e8ffc39489434e1faa1fc66465ced05df334",
          "withoutMetadata": "6512af3b3f2444e5cde100aebf11f3c8be847d003d1ff1b18831927b0dbf710b",
          "linkedWithoutMetadata": "6512af3b3f2444e5cde100aebf11f3c8be847d003d1ff1b18831927b0dbf710b"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:16"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "cc395b6625dd26ec5660452609b8089b697580c8511ece5bd4dd6509f0b21684",
          "withoutMetadata": "8ebe34b68832096c410d3af067601bcd3143fab32727cc4062fccef6c0411396",
          "linkedWithoutMetadata": "8ebe34b68832096c410d3af067601bcd3143fab32727cc4062fccef6c0411396"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "8914a6625286c147d44eddcca918a1addde68a3a74c29cafeaedd41498572455",
          "withoutMetadata": "8ebe34b68832096c410d3af067601bcd3143fab32727cc4062fccef6c0411396",
          "linkedWithoutMetadata": "8ebe34b68832096c410d3af067601bcd3143fab32727cc4062fccef6c0411396"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "33ea1a8a4ad50195df64cbeac40aec79ce85af8b5e6916036919083d189c5981",
          "withoutMetadata": "ae0a312b0487e5d227edfd88b1dc44be811175a7ef05de110b4c9906a7f6e71d",
          "linkedWithoutMetadata": "ae0a312b0487e5d227edfd88b1dc44be811175a7ef05de110b4c9906a7f6e71d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "2738bfc5f5781d06c59fc5143471c830d39581cc95ac546679eb75a67f733dd4",
          "withoutMetadata": "076c8f39a53feaa68755344cdb503ec1a26adc9c4fe741be0097b7615e654fc4",
          "linkedWithoutMetadata": "076c8f39a53feaa68755344cdb503ec1a26adc9c4fe741be0097b7615e654fc4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "dc6a3afacfe90dd4c9cd8bfc6f5db11e43738f4a071e82caa7cafc42c81ebed0",
          "withoutMetadata": "c0344feb1886a00e642114303558f8eeb7ccd74d19bdec53c7d94ca5b1147adc",
          "linkedWithoutMetadata": "c0344feb1886a00e642114303558f8eeb7ccd74d19bdec53c7d94ca5b1147adc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "8198a5496d013f84b899cd61745fa476c5a0f25f8fcdbc51336b3d6125a52f52",
          "withoutMetadata": "62d72cc1cf98f8c21069a1bc97dad0a08beace718aab93abba82c3be355ad750",
          "linkedWithoutMetadata": "62d72cc1cf98f8c21069a1bc97dad0a08beace718aab93abba82c3be355ad750"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "781af8cc97d0eafef49317ffa2dfe44dbbd368a110327d71e6320f0607af0a60",
          "withoutMetadata": "ecf0ced2923319b4672b3f8e7ed9ea7dfbadc5e8851885e82d854396f571dd09",
          "linkedWithoutMetadata": "ecf0ced2923319b4672b3f8e7ed9ea7dfbadc5e8851885e82d854396f571dd09"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "70940e31b0724130c1bd7f72d65bacb64c3771a263715499ec92dde5eb76dc2c",
          "withoutMetadata": "fcfbd546f3bf8951f34275cdb2c69d4a88ccbfe13ed687bc0de021fe1bd32f9c",
          "linkedWithoutMetadata": "fcfbd546f3bf8951f34275cdb2c69d4a88ccbfe13ed687bc0de021fe1bd32f9c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "7e4555b9f66af6be1046ad06936152b93f2bb94ab3a773f024dce2cb020c0a6b",
          "withoutMetadata": "fcfbd546f3bf8951f34275cdb2c69d4a88ccbfe13ed687bc0de021fe1bd32f9c",
          "linkedWithoutMetadata": "fcfbd546f3bf8951f34275cdb2c69d4a88ccbfe13ed687bc0de021fe1bd32f9c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "f9c59d125c418e8acbad69f2741e8468e119ba42a0aa480ad16e798263158249",
          "withoutMetadata": "adc6d815aa225c41c2cf50e4e5f170e8e62a4f921588c7ecc31fcbfc0ecdcef3",
          "linkedWithoutMetadata": "adc6d815aa225c41c2cf50e4e5f170e8e62a4f921588c7ecc31fcbfc0ecdcef3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "tokenToEth(address,address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "02292286fe06cada97f5707b25d923e0742fa0da0f568dbcfadf4f8c854226d9",
          "withoutMetadata": "735e96de5418f5d17a70b2d7039c0ce63bc934e9a9dfcae5ac44a984ece1d2f5",
          "linkedWithoutMetadata": "735e96de5418f5d17a70b2d7039c0ce63bc934e9a9dfcae5ac44a984ece1d2f5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)",
          "ethToToken(address,address,uint56)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "87fbf0e27ef02f58af87ccb93d86d86af496c8276a2d168717c279c586260291",
          "withoutMetadata": "6113cea368087f7e12bded03fef21e43cc57b96ee687cd60efe3c929adc37c62",
          "linkedWithoutMetadata": "6113cea368087f7e12bded03fef21e43cc57b96ee687cd60efe3c929adc37c62"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "079454fc5ebd6820422851a840c4616afafea787492f4eff35b0133cb44e11df",
          "withoutMetadata": "6113cea368087f7e12bded03fef21e43cc57b96ee687cd60efe3c929adc37c62",
          "linkedWithoutMetadata": "6113cea368087f7e12bded03fef21e43cc57b96ee687cd60efe3c929adc37c62"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address[])",
          "saveContract(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "caeab9ed3e4636ebdfac824dcd9c7db39a3a353c8b4f244a9ead27b6dbbd13a0",
          "withoutMetadata": "2fef2003a528bbebab757af7507a4905d134f2da7d5004d434a233cd41b35a30",
          "linkedWithoutMetadata": "2fef2003a528bbebab757af7507a4905d134f2da7d5004d434a233cd41b35a30"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address[],address)",
          "saveContract(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:19"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "9aeeeae0305b68995d3980f07151787d0434e227a1af162eff8041e234463a99",
          "withoutMetadata": "822e6334b0854926f9ff8a9573a6602c14e61e091f6c1a400107a906b2ee869d",
          "linkedWithoutMetadata": "822e6334b0854926f9ff8a9573a6602c14e61e091f6c1a400107a906b2ee869d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "382e2660c429f123baba23fd84792b5b0c31e4cc8eab44be3bdb8880ba0796dd",
          "withoutMetadata": "822e6334b0854926f9ff8a9573a6602c14e61e091f6c1a400107a906b2ee869d",
          "linkedWithoutMetadata": "822e6334b0854926f9ff8a9573a6602c14e61e091f6c1a400107a906b2ee869d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "0a05b85a60d3c5b2092638634f90b18925e3260cd686d4d33d4f9ddae604f2d5",
          "withoutMetadata": "4eab1e36f9566db58e47d36ba7de77e72cf0db761f1ee9b2bcca9ffdc1240c4e",
          "linkedWithoutMetadata": "4eab1e36f9566db58e47d36ba7de77e72cf0db761f1ee9b2bcca9ffdc1240c4e"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "0113a9a748c4674e97cf369872962e27fe6df23333a2cf67ca28d9a9c879b4d0",
          "withoutMetadata": "fd18b40f8a2e40454bbb7357e3e4fa758659504f8e7fdcc58a18f549ffd76d46",
          "linkedWithoutMetadata": "fd18b40f8a2e40454bbb7357e3e4fa758659504f8e7fdcc58a18f549ffd76d46"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "9aa159b1fb5559d02acc26aa0e6f12323cd64e805ec0ffa480589918fd056e6e",
          "withoutMetadata": "822e6334b0854926f9ff8a9573a6602c14e61e091f6c1a400107a906b2ee869d",
          "linkedWithoutMetadata": "822e6334b0854926f9ff8a9573a6602c14e61e091f6c1a400107a906b2ee869d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "_contracts",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "6cc22e67f973690ab37ae2d33c61a98775d4309f163574f3499698c720e60e77",
          "withoutMetadata": "9e935d8d97e656161d7299a03f45ebb0370a8849d851efc1b71cada60adef4c0",
          "linkedWithoutMetadata": "9e935d8d97e656161d7299a03f45ebb0370a8849d851efc1b71cada60adef4c0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferFrom(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)899",
              "src": "contracts/SwapToken.sol:9"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:10"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)899": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "3593906876d96a3179c5070589fd169a1405e56189f16cd83c5f1cb3f6e8fc76",
          "withoutMetadata": "8e27e76a549c66e09168bdabbad9c731b72a77f1d56cb6b5e2542e125827af4e",
          "linkedWithoutMetadata": "8e27e76a549c66e09168bdabbad9c731b72a77f1d56cb6b5e2542e125827af4e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "93601aa43a1f37a733828dd88ea36ca9c71a48ad2c3d33f67ac2f9fd1cb2e45c",
          "withoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042",
          "linkedWithoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV2": {
        "src": "contracts/YutengV2.sol:5",
        "version": {
          "withMetadata": "b9d998911c36bba1456d7b0ddeba4eeeecac46c0c91da1fbe729b40d84a3e3f4",
          "withoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a",
          "linkedWithoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "setsCcore(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV2",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV2.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "92a7ce57495ff8ecb8e7c25c6dbf623941256fa43676d5f6c46bfd7356e9029c",
          "withoutMetadata": "9e935d8d97e656161d7299a03f45ebb0370a8849d851efc1b71cada60adef4c0",
          "linkedWithoutMetadata": "9e935d8d97e656161d7299a03f45ebb0370a8849d851efc1b71cada60adef4c0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferFrom(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:9"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:10"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "fa42f7a6e11a9791d6585f4bb50cae1873cc441bfdedc401232f6ea41002304e",
          "withoutMetadata": "31146c74d63b14b625043fd81cc914113d8209e596bb6d4b5b12db05dffe9b00",
          "linkedWithoutMetadata": "31146c74d63b14b625043fd81cc914113d8209e596bb6d4b5b12db05dffe9b00"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferFrom(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:9"
            },
            {
              "contract": "SwapToken",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:10"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "4dc024f27f829378b4a105e23db8bca79f198d6578e71a3c4ade1002ccb92879",
          "withoutMetadata": "a7b779e11cf40d3bf5ff664f1765f172f35c794da12b468922610986d909d37d",
          "linkedWithoutMetadata": "a7b779e11cf40d3bf5ff664f1765f172f35c794da12b468922610986d909d37d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferFrom(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:9"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "2c55ab47bc6ced546ab78afd386eddc00a0e82578a0291197ab7f64b0b47bdf0",
          "withoutMetadata": "b1d58588d100b82c1dc9aa6035658199a0c397d6ed0d7f7f8675c822c00f060c",
          "linkedWithoutMetadata": "b1d58588d100b82c1dc9aa6035658199a0c397d6ed0d7f7f8675c822c00f060c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "transferFrom(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:9"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "110358d231f7e3bbdc7fdd2e7d8ad61f3710c53b5ec9673b40f7989462a146a5",
          "withoutMetadata": "444421cf2ef54592dfcb5de1783f19fa6d27ce7b8dc57b2e3ab8a9936a1d1d3e",
          "linkedWithoutMetadata": "444421cf2ef54592dfcb5de1783f19fa6d27ce7b8dc57b2e3ab8a9936a1d1d3e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "transferFrom(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:9"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "ea74d5915e4e333c9c2a7d5d0f2cc67f1db4244affd29ce56330b3490723a746",
          "withoutMetadata": "7b993fbb7b170b02f5855860fad4a4519779e55bf54323bb70eadb99200411e2",
          "linkedWithoutMetadata": "7b993fbb7b170b02f5855860fad4a4519779e55bf54323bb70eadb99200411e2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "transferFrom(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:9"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "e7b551f67d4e9520faf04dc22445eb668903d299b277585b6e98c26e82264477",
          "withoutMetadata": "419e6e289114fe80265949b6d18a4f3f0e30c03b2ee64305aff3ead1d447e153",
          "linkedWithoutMetadata": "419e6e289114fe80265949b6d18a4f3f0e30c03b2ee64305aff3ead1d447e153"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:9"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "072a09bbc24c765ebd0ecc10729bdb3396b7ec037142023479b772bc7d7fb9e0",
          "withoutMetadata": "3b404a0550e799d0a2e57776712ba27b9fe846dbcf1faa50177d0b2825ad6876",
          "linkedWithoutMetadata": "3b404a0550e799d0a2e57776712ba27b9fe846dbcf1faa50177d0b2825ad6876"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)14",
              "src": "contracts/SwapToken.sol:9"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)14": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "637e3f792a6f10e55a29817e6d23c301a823d27a2bcf068b47cce85963066fe8",
          "withoutMetadata": "093c796150aeaf8b4f628b8560d8699ed4c5a723affd1695e0df1b5b63e39031",
          "linkedWithoutMetadata": "093c796150aeaf8b4f628b8560d8699ed4c5a723affd1695e0df1b5b63e39031"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance(address,address)",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:17"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:23"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:12"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:15"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:16"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "3593906876d96a3179c5070589fd169a1405e56189f16cd83c5f1cb3f6e8fc76",
          "withoutMetadata": "8e27e76a549c66e09168bdabbad9c731b72a77f1d56cb6b5e2542e125827af4e",
          "linkedWithoutMetadata": "8e27e76a549c66e09168bdabbad9c731b72a77f1d56cb6b5e2542e125827af4e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "3d4db95d0c111dae9363547f31ac180dd9c60f02898f2a3b3e1ec19809bb627c",
          "withoutMetadata": "a50d8f7172c3cff53897a841c72dbf22bca66db875d63bf128c1e5ecbbe0feac",
          "linkedWithoutMetadata": "a50d8f7172c3cff53897a841c72dbf22bca66db875d63bf128c1e5ecbbe0feac"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "3593906876d96a3179c5070589fd169a1405e56189f16cd83c5f1cb3f6e8fc76",
          "withoutMetadata": "8e27e76a549c66e09168bdabbad9c731b72a77f1d56cb6b5e2542e125827af4e",
          "linkedWithoutMetadata": "8e27e76a549c66e09168bdabbad9c731b72a77f1d56cb6b5e2542e125827af4e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "630f5eb22c018d574bb409ecb7e44cfb30fade543327819356a046fdf0351e18",
          "withoutMetadata": "8e27e76a549c66e09168bdabbad9c731b72a77f1d56cb6b5e2542e125827af4e",
          "linkedWithoutMetadata": "8e27e76a549c66e09168bdabbad9c731b72a77f1d56cb6b5e2542e125827af4e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "683f090cdfb9e3d7f551ba5466b107a4a3da7a1f795cc603d8d5fe32b1960e2e",
          "withoutMetadata": "d74b98f672a59b02a137c48bf2d01e7ab3018b5ca5dfe205f21a17c574410ab9",
          "linkedWithoutMetadata": "d74b98f672a59b02a137c48bf2d01e7ab3018b5ca5dfe205f21a17c574410ab9"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "cec8b90f08eeffb887dc17ffeb9b7fdbbae338e6aeba2887d890f06b591d0978",
          "withoutMetadata": "338abc58db1899441581f424b19ad3f7811974608d2a6ab0ca38cd39e765be9b",
          "linkedWithoutMetadata": "338abc58db1899441581f424b19ad3f7811974608d2a6ab0ca38cd39e765be9b"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "64f576dcc84887bdf7ed63eddf0e42b267b4e4b2a830fcde522da94f505bfde0",
          "withoutMetadata": "e9e94878b6ea9e53532cc7f816d521d438cb94a547430bb58a5f684fc03072c6",
          "linkedWithoutMetadata": "e9e94878b6ea9e53532cc7f816d521d438cb94a547430bb58a5f684fc03072c6"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "bf288bca0c5bc066aa16e6fe538ba66e86fbc065af0e452e38abee64777be2af",
          "withoutMetadata": "fa472e05fa2243440c59c8001ad8b4e35e1cde613c992ac07d4ae79e2e2bccdf",
          "linkedWithoutMetadata": "fa472e05fa2243440c59c8001ad8b4e35e1cde613c992ac07d4ae79e2e2bccdf"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "4b5b2eb353721402a52671377bc7cd701dee8931c07436cf5917fb7fab51bb2c",
          "withoutMetadata": "ce2bbce89551d7479c4057c885455bbfcb3d4e671acf2f801babbfc9a817f76d",
          "linkedWithoutMetadata": "ce2bbce89551d7479c4057c885455bbfcb3d4e671acf2f801babbfc9a817f76d"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)914",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)914": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "141eaf568ef5f32f94464c8dc762ce802cadc48ac6d7bc8473b8fd18296714ea",
          "withoutMetadata": "d80d7c0e06d7430ed9e62ae646b517007c12c3457c864016819385928e63beb2",
          "linkedWithoutMetadata": "d80d7c0e06d7430ed9e62ae646b517007c12c3457c864016819385928e63beb2"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "cedd23a5f8dde43002cd9a96ffa00b58a38b2c75854426ccbd6744ab38ffd635",
          "withoutMetadata": "4172d86c85fb1c95c0f1e9b9395c9470d95aef62fc51250e6c6f9a33b1814717",
          "linkedWithoutMetadata": "4172d86c85fb1c95c0f1e9b9395c9470d95aef62fc51250e6c6f9a33b1814717"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "e1be8c88c091e2ae72f8d66a68f48f8cca8d39fbf5b3208b89e6d4e5ba48337a",
          "withoutMetadata": "5dbb5002199c0a8d7daab8a480f6500e018250a9deff57097cceb22367b11192",
          "linkedWithoutMetadata": "5dbb5002199c0a8d7daab8a480f6500e018250a9deff57097cceb22367b11192"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "5297640b7db5e8b19f605f5b08869450bba7262719fbad2b1373e2a1a440cbfa",
          "withoutMetadata": "5dbb5002199c0a8d7daab8a480f6500e018250a9deff57097cceb22367b11192",
          "linkedWithoutMetadata": "5dbb5002199c0a8d7daab8a480f6500e018250a9deff57097cceb22367b11192"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "b6546e3b5e3106847b03d2953341f7116203359ad4528f7ecfb9d4493357ae2b",
          "withoutMetadata": "0e246518df7476447e8c894e8caf7650273d8edfb4c1e70cd59449cccdc9f8f9",
          "linkedWithoutMetadata": "0e246518df7476447e8c894e8caf7650273d8edfb4c1e70cd59449cccdc9f8f9"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "059eb0321e77d7444bc46bbfd426eb365c2d3cee72b2dc6b490d6d62c2571629",
          "withoutMetadata": "36170068c9169ac2b5a9465d27cce20e9fb8c5875753f9c53123070485197045",
          "linkedWithoutMetadata": "36170068c9169ac2b5a9465d27cce20e9fb8c5875753f9c53123070485197045"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "age2(uint256)",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)914",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)914": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "379449743c962090a4a52485286ad485c0a466549f0b03776a264e6b367f5408",
          "withoutMetadata": "ddfce599e80c8d69ba8e9928e479e1c44d8dbcc256cb28a6313ee1215f15d3ec",
          "linkedWithoutMetadata": "ddfce599e80c8d69ba8e9928e479e1c44d8dbcc256cb28a6313ee1215f15d3ec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()",
          "age(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "93601aa43a1f37a733828dd88ea36ca9c71a48ad2c3d33f67ac2f9fd1cb2e45c",
          "withoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042",
          "linkedWithoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV2": {
        "src": "contracts/YutengV2.sol:5",
        "version": {
          "withMetadata": "b9d998911c36bba1456d7b0ddeba4eeeecac46c0c91da1fbe729b40d84a3e3f4",
          "withoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a",
          "linkedWithoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "setsCcore(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV2",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV2.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "059eb0321e77d7444bc46bbfd426eb365c2d3cee72b2dc6b490d6d62c2571629",
          "withoutMetadata": "36170068c9169ac2b5a9465d27cce20e9fb8c5875753f9c53123070485197045",
          "linkedWithoutMetadata": "36170068c9169ac2b5a9465d27cce20e9fb8c5875753f9c53123070485197045"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "age2(uint256)",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:40"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "379449743c962090a4a52485286ad485c0a466549f0b03776a264e6b367f5408",
          "withoutMetadata": "ddfce599e80c8d69ba8e9928e479e1c44d8dbcc256cb28a6313ee1215f15d3ec",
          "linkedWithoutMetadata": "ddfce599e80c8d69ba8e9928e479e1c44d8dbcc256cb28a6313ee1215f15d3ec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()",
          "age(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "a0bf8875c7a45c8d6f514283d8f83ec8ea467f3acc05e6d66d8e00c0db7849f3",
          "withoutMetadata": "fcf64909f6e4186487896fb9f6ed914a3475be0e44113bb3ddb3bba3b076b7c0",
          "linkedWithoutMetadata": "fcf64909f6e4186487896fb9f6ed914a3475be0e44113bb3ddb3bba3b076b7c0"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "age2(uint256)",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "62687d984954a2037f4749a85f14ba6f7ccaedfd4d9f5cea406e1c6b22a48e34",
          "withoutMetadata": "6c46e89780df439ee05a7adab58a438755528074f33e78abcdb876b30cf48492",
          "linkedWithoutMetadata": "6c46e89780df439ee05a7adab58a438755528074f33e78abcdb876b30cf48492"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "age(uint256)",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "eacfc291b7e34b9caf374d9f0685fc94d8f809dd56fb1a307d083627a0917e17",
          "withoutMetadata": "6c46e89780df439ee05a7adab58a438755528074f33e78abcdb876b30cf48492",
          "linkedWithoutMetadata": "6c46e89780df439ee05a7adab58a438755528074f33e78abcdb876b30cf48492"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "age(uint256)",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "e1e25b1ec1772d38c63093c4eaf97cf8a8789080513a3a1e54df2176ed1371b5",
          "withoutMetadata": "07ba2fd274945eb79c195bbfee1852df549b9aa5a37e12ac0c7691827b678963",
          "linkedWithoutMetadata": "07ba2fd274945eb79c195bbfee1852df549b9aa5a37e12ac0c7691827b678963"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "age(uint256)",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "24b8276ebe76f3032457c53e6d8b8eca08bda8dc855f098d11e4831cbf2aa44e",
          "withoutMetadata": "2f1a337d35d3c90e3121b3a76c43a3e7e5894f1eac229c6e47caf85f52056911",
          "linkedWithoutMetadata": "2f1a337d35d3c90e3121b3a76c43a3e7e5894f1eac229c6e47caf85f52056911"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()",
          "age(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "ecebefb190c2f580eeaaa760fce382b78ad00f64f981ce1726a31a3b0d40f095",
          "withoutMetadata": "ddfce599e80c8d69ba8e9928e479e1c44d8dbcc256cb28a6313ee1215f15d3ec",
          "linkedWithoutMetadata": "ddfce599e80c8d69ba8e9928e479e1c44d8dbcc256cb28a6313ee1215f15d3ec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()",
          "age(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "ead95a0dd9c3c123b30b4efe747b54eefd740cccd49d3a87145f38c3f2d691b6",
          "withoutMetadata": "ddfce599e80c8d69ba8e9928e479e1c44d8dbcc256cb28a6313ee1215f15d3ec",
          "linkedWithoutMetadata": "ddfce599e80c8d69ba8e9928e479e1c44d8dbcc256cb28a6313ee1215f15d3ec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()",
          "age(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "b65863ade2921fd91667e22c14666977dff556de3593da5a493905b4c3b30745",
          "withoutMetadata": "07ba2fd274945eb79c195bbfee1852df549b9aa5a37e12ac0c7691827b678963",
          "linkedWithoutMetadata": "07ba2fd274945eb79c195bbfee1852df549b9aa5a37e12ac0c7691827b678963"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "age(uint256)",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)914",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)914": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "ecebefb190c2f580eeaaa760fce382b78ad00f64f981ce1726a31a3b0d40f095",
          "withoutMetadata": "ddfce599e80c8d69ba8e9928e479e1c44d8dbcc256cb28a6313ee1215f15d3ec",
          "linkedWithoutMetadata": "ddfce599e80c8d69ba8e9928e479e1c44d8dbcc256cb28a6313ee1215f15d3ec"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()",
          "age(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "5d9ca1d050e655a9ee4f6a3dae3ec2ee847a76d1c20d3e489eea9b4f4adf442a",
          "withoutMetadata": "8a2915a855c0c9b57579c8520f74f971462ab7a2e50ec0c5bd45408813c85e3f",
          "linkedWithoutMetadata": "8a2915a855c0c9b57579c8520f74f971462ab7a2e50ec0c5bd45408813c85e3f"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "age()",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "5b22a72eba9579c12be933a6fb0565d4d374b3849cea2f42b965304f1e92c82e",
          "withoutMetadata": "0908ec9a65a4f9b76d953531f436709f2c30e77740a2e7f2f30e9452deb19c98",
          "linkedWithoutMetadata": "0908ec9a65a4f9b76d953531f436709f2c30e77740a2e7f2f30e9452deb19c98"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "age()",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "598c39269ce7bffa786bf6dbbc14dc64ad9ffa9835f56ea63acbd58ff345606a",
          "withoutMetadata": "0908ec9a65a4f9b76d953531f436709f2c30e77740a2e7f2f30e9452deb19c98",
          "linkedWithoutMetadata": "0908ec9a65a4f9b76d953531f436709f2c30e77740a2e7f2f30e9452deb19c98"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "age()",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "3fe18f7afe364c96efc36d366a037c2374898bdfa86b6019007f1b3282952698",
          "withoutMetadata": "2d9e683dae6cc67a273be2fa363fc9bb93e80f02bc285f91568f49af085acca5",
          "linkedWithoutMetadata": "2d9e683dae6cc67a273be2fa363fc9bb93e80f02bc285f91568f49af085acca5"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "age()",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)914",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)914": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "2e7a0e8387dfcac51956f00c8e297cfe51f076e5dc15c38ab4b69eda93a36912",
          "withoutMetadata": "d6d60855969be02b655b7cd0743ff0b7c514d947736ccf9ae402b62b71e493ef",
          "linkedWithoutMetadata": "d6d60855969be02b655b7cd0743ff0b7c514d947736ccf9ae402b62b71e493ef"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()",
          "age()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "0fbe93ad48abbcf46c9d56a09c5ea102b6d3b7cdcf23495b8bc53722be07fa9e",
          "withoutMetadata": "674de253267ee3535176331030a8d70f37769d1aa07ebe190376e9de6786300c",
          "linkedWithoutMetadata": "674de253267ee3535176331030a8d70f37769d1aa07ebe190376e9de6786300c"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "17d378739a3c70315a050d25d3a22c207fc13d949bb19d548f2a21519c3b927b",
          "withoutMetadata": "330755d5b5c58f4cf1612dd37e4c80d0b3bad1588d1edab5ce660371869b5115",
          "linkedWithoutMetadata": "330755d5b5c58f4cf1612dd37e4c80d0b3bad1588d1edab5ce660371869b5115"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "fb27ae4ee65e24963a9c77531d543780a3f54e52b38a1733d6926a17f29ce8d0",
          "withoutMetadata": "b58a64b8e25499bc0c84b2fc56f957d9f027d65e3921acf300f8d905a489db68",
          "linkedWithoutMetadata": "b58a64b8e25499bc0c84b2fc56f957d9f027d65e3921acf300f8d905a489db68"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "balanceOf(address)",
          "transferToContract(address,address,uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "2cc63fb3ea3668ae87e2cb5f78ecb9ed1fae8f9ad262216b843461adf52b96e7",
          "withoutMetadata": "306dcc7ef87e056d95891bf6cbafb17bcff1ff24c389ce407f12ac68ca054aba",
          "linkedWithoutMetadata": "306dcc7ef87e056d95891bf6cbafb17bcff1ff24c389ce407f12ac68ca054aba"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "856755ccb5a59ad2c89cc263622962df17dd0661fda6c3ea3f11e1a6fa328c1e",
          "withoutMetadata": "89937170a9bdbb11a39be91373ab3acf68b67c772a24fa415fb3ea6776d75983",
          "linkedWithoutMetadata": "89937170a9bdbb11a39be91373ab3acf68b67c772a24fa415fb3ea6776d75983"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,uint256)",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:24"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "12f55e76042d827561a55c43caf7a65d1b9d348f8cc6a6e84e06b2a6c8efb4d6",
          "withoutMetadata": "691f7c8d19dd9ce53281136d94722bcee77edf54ee0a2660b2bb754590b30415",
          "linkedWithoutMetadata": "691f7c8d19dd9ce53281136d94722bcee77edf54ee0a2660b2bb754590b30415"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,uint256)",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "5e2f21f8e5d23fd122ce512e3309de1729577efdc52a08129852014646818a96",
          "withoutMetadata": "f73c8ed4e80b21ab1c2b48634e02e7e77f20671b00af8dfb7d64f4c4f9f52589",
          "linkedWithoutMetadata": "f73c8ed4e80b21ab1c2b48634e02e7e77f20671b00af8dfb7d64f4c4f9f52589"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,uint256)",
          "test()",
          "balanceOf(address)",
          "allowance(address,address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "05ef8ac2b60845bacd60490bae9732cf653091c483f307c60f691adf20c524d4",
          "withoutMetadata": "8db0ad37e442de740918fae4cfbd4e4dfbbeba0aeae1dd762b28135e403e67a1",
          "linkedWithoutMetadata": "8db0ad37e442de740918fae4cfbd4e4dfbbeba0aeae1dd762b28135e403e67a1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "test()",
          "balanceOf(address)",
          "allowance(address,address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "cce8a4e7cff74740e921b3ac1a45c66ce3112a783c4907ed7e7798efc5b09b0d",
          "withoutMetadata": "39ebf13b3efae919a1047788c3499ffde0fb368680cb8b79f710c36d2a4b46ba",
          "linkedWithoutMetadata": "39ebf13b3efae919a1047788c3499ffde0fb368680cb8b79f710c36d2a4b46ba"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "test()",
          "balanceOf(address)",
          "allowance(address,address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "703e06abfa444e00eac27be1e435bf0cc6dc9d5d3158987f2029a67588c0617b",
          "withoutMetadata": "39ebf13b3efae919a1047788c3499ffde0fb368680cb8b79f710c36d2a4b46ba",
          "linkedWithoutMetadata": "39ebf13b3efae919a1047788c3499ffde0fb368680cb8b79f710c36d2a4b46ba"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "test()",
          "balanceOf(address)",
          "allowance(address,address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "0a444d655605d9bb18a3806424ac0c39d37092129ec1107e01928d7d2fbcbef1",
          "withoutMetadata": "a78506b930bf26a8919c79d59afb94cd80afbfa48bc66f9b590107e5c1f6a7db",
          "linkedWithoutMetadata": "a78506b930bf26a8919c79d59afb94cd80afbfa48bc66f9b590107e5c1f6a7db"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "a452dce94d218a6db9a5749ba8c258e8997a4d6c21e895327257cd4fb5ccf0eb",
          "withoutMetadata": "052a40d1dfb15c54ca3aed87df179939fd6c98a3b5edd90f2301f24726c81369",
          "linkedWithoutMetadata": "052a40d1dfb15c54ca3aed87df179939fd6c98a3b5edd90f2301f24726c81369"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)923",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)923": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "b9d6951661330ec9cd800152f32de5292b46cc75be523c9eeb7cd5bd726050e5",
          "withoutMetadata": "a78506b930bf26a8919c79d59afb94cd80afbfa48bc66f9b590107e5c1f6a7db",
          "linkedWithoutMetadata": "a78506b930bf26a8919c79d59afb94cd80afbfa48bc66f9b590107e5c1f6a7db"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "ff3af001511b62f6f30d5c00085723f89238ad269e2d1b6c1077fa996298ee17",
          "withoutMetadata": "b789ebad3664d033ddfea86322414a2c365cb5a39bd26c87b4913348b47d13ab",
          "linkedWithoutMetadata": "b789ebad3664d033ddfea86322414a2c365cb5a39bd26c87b4913348b47d13ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "e1a7437507b6bbcab8890f30bb0d35174132e7e9792cfd6f7c61cd9153c9a12a",
          "withoutMetadata": "052a40d1dfb15c54ca3aed87df179939fd6c98a3b5edd90f2301f24726c81369",
          "linkedWithoutMetadata": "052a40d1dfb15c54ca3aed87df179939fd6c98a3b5edd90f2301f24726c81369"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "ff3af001511b62f6f30d5c00085723f89238ad269e2d1b6c1077fa996298ee17",
          "withoutMetadata": "b789ebad3664d033ddfea86322414a2c365cb5a39bd26c87b4913348b47d13ab",
          "linkedWithoutMetadata": "b789ebad3664d033ddfea86322414a2c365cb5a39bd26c87b4913348b47d13ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "6924bddda4d69dfba296f811f4196fa6d69e02ba9be103926dc4efc8e8224539",
          "withoutMetadata": "0ca311a3e759f8c900b50aaefabf889bbcaebb0cff419c58fd1b853a54e7ff2a",
          "linkedWithoutMetadata": "0ca311a3e759f8c900b50aaefabf889bbcaebb0cff419c58fd1b853a54e7ff2a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "transferFrom(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "f20a77473dd2328fc7380a8cebd180b6925e2a739d6d261706e48043a27cfad3",
          "withoutMetadata": "fdc1fd516186d2091b16764e1e28f46c4b113ce2dbb6e8b5066d032ba612f174",
          "linkedWithoutMetadata": "fdc1fd516186d2091b16764e1e28f46c4b113ce2dbb6e8b5066d032ba612f174"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "transferFrom(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "cd6658b10e0fd72c43b455ff9b01168e3dff2ff12e03112788e8d6e2ef510514",
          "withoutMetadata": "b55a17d8f763a62f08486bd0ec6da5caaf7de404d286c0919c43bcea19b7bdc1",
          "linkedWithoutMetadata": "b55a17d8f763a62f08486bd0ec6da5caaf7de404d286c0919c43bcea19b7bdc1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "transferFrom(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:28"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "69b3544270b965b94883a2e8351cebfd0ad0552c8b94ed93dbdd0cfc50944a31",
          "withoutMetadata": "c0bf9810a73b372a76deae658f82d1440759afcdf7daeea074072f5f0b39dd00",
          "linkedWithoutMetadata": "c0bf9810a73b372a76deae658f82d1440759afcdf7daeea074072f5f0b39dd00"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "transferFrom(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:27"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "6e4d92e4b30bdd1f673abf7e7f7f87e43b2ad6ab725db30321b9981c0d10e0e3",
          "withoutMetadata": "b789ebad3664d033ddfea86322414a2c365cb5a39bd26c87b4913348b47d13ab",
          "linkedWithoutMetadata": "b789ebad3664d033ddfea86322414a2c365cb5a39bd26c87b4913348b47d13ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "69b3544270b965b94883a2e8351cebfd0ad0552c8b94ed93dbdd0cfc50944a31",
          "withoutMetadata": "c0bf9810a73b372a76deae658f82d1440759afcdf7daeea074072f5f0b39dd00",
          "linkedWithoutMetadata": "c0bf9810a73b372a76deae658f82d1440759afcdf7daeea074072f5f0b39dd00"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "transferFrom(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:27"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "7d86d08505aec828c3da91d0aeaaa21e532d8fff8f72f419ad5d02ba25faa3a6",
          "withoutMetadata": "b0919ed1aee950f30d0e15c0dca2f95a1a6f7b7cbc64a715104ecb082b77364b",
          "linkedWithoutMetadata": "b0919ed1aee950f30d0e15c0dca2f95a1a6f7b7cbc64a715104ecb082b77364b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:23"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "6a6681e69b4020a87058a6c7bec3b485bd3632076a6b0b0bd39ed3d8b10d1e88",
          "withoutMetadata": "9e34cb5a5269174c4d12906e8160ab73f9908497fa5fca9733806837207f6f46",
          "linkedWithoutMetadata": "9e34cb5a5269174c4d12906e8160ab73f9908497fa5fca9733806837207f6f46"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:23"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "e6e7ef4391de10860b184fe922add74d096b49d97b33ab79fc3f809205fcd6e9",
          "withoutMetadata": "b789ebad3664d033ddfea86322414a2c365cb5a39bd26c87b4913348b47d13ab",
          "linkedWithoutMetadata": "b789ebad3664d033ddfea86322414a2c365cb5a39bd26c87b4913348b47d13ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "01d7e0e9c768bbec4516dae5eb618a26da62a71bf8ac2530cae7fc6522881750",
          "withoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7",
          "linkedWithoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "a30684d792576e913528841bfd2f162bd4a83e04960ba3c958a1913759cbfc6a",
          "withoutMetadata": "b5401d935cf7f4c08bae28ccfc537640aeabb5aab5b3cd104f52e895ab298426",
          "linkedWithoutMetadata": "b5401d935cf7f4c08bae28ccfc537640aeabb5aab5b3cd104f52e895ab298426"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "75264d8b46c425beb566670cb14dfd2890a5b15d546fbb79f32f2d79a3c3dcc5",
          "withoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7",
          "linkedWithoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "f6d953150eea5cb4b6058f86b5ecc86dcf14f57b1f7c826b9f3880725c027429",
          "withoutMetadata": "b262ab8ddac561bf5515f64c7ed862b284d85041a6271681a5b5c3d633934929",
          "linkedWithoutMetadata": "b262ab8ddac561bf5515f64c7ed862b284d85041a6271681a5b5c3d633934929"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "830a80077925306872aa65647c3a9132e49e69d7f05138210644c3e0e3e71063",
          "withoutMetadata": "308597e9940aa95208ba99a7a7efd9ddb97e4b6905d439c41882cda11bb0221f",
          "linkedWithoutMetadata": "308597e9940aa95208ba99a7a7efd9ddb97e4b6905d439c41882cda11bb0221f"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "f6d953150eea5cb4b6058f86b5ecc86dcf14f57b1f7c826b9f3880725c027429",
          "withoutMetadata": "b262ab8ddac561bf5515f64c7ed862b284d85041a6271681a5b5c3d633934929",
          "linkedWithoutMetadata": "b262ab8ddac561bf5515f64c7ed862b284d85041a6271681a5b5c3d633934929"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "a7aba0ce78daa4aba9053d308447d399c08456ebd077a2ad215d45e2e2c4a0ff",
          "withoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7",
          "linkedWithoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "830a80077925306872aa65647c3a9132e49e69d7f05138210644c3e0e3e71063",
          "withoutMetadata": "308597e9940aa95208ba99a7a7efd9ddb97e4b6905d439c41882cda11bb0221f",
          "linkedWithoutMetadata": "308597e9940aa95208ba99a7a7efd9ddb97e4b6905d439c41882cda11bb0221f"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "f6d953150eea5cb4b6058f86b5ecc86dcf14f57b1f7c826b9f3880725c027429",
          "withoutMetadata": "b262ab8ddac561bf5515f64c7ed862b284d85041a6271681a5b5c3d633934929",
          "linkedWithoutMetadata": "b262ab8ddac561bf5515f64c7ed862b284d85041a6271681a5b5c3d633934929"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "4c00fe7684c2da1efb321843545b1ead1cb3b6d89801c33c954d75033571771d",
          "withoutMetadata": "b5401d935cf7f4c08bae28ccfc537640aeabb5aab5b3cd104f52e895ab298426",
          "linkedWithoutMetadata": "b5401d935cf7f4c08bae28ccfc537640aeabb5aab5b3cd104f52e895ab298426"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "69136dd17be6c91a452c482b80a8cc747162f2324b39c5bdca57b2992fe79701",
          "withoutMetadata": "df753a1be9ea27d08b89094aa6f8111a1250d3e9e77e9c62f1d2966e889742cc",
          "linkedWithoutMetadata": "df753a1be9ea27d08b89094aa6f8111a1250d3e9e77e9c62f1d2966e889742cc"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "39de362257b9f0e96b7c48d590d6c201b90d0b9805277b48c4cabe67f2286cbd",
          "withoutMetadata": "244991d1b9bc7c2d00bd9d37269569fa7d87697df3119e601b59dfff9e4877d5",
          "linkedWithoutMetadata": "244991d1b9bc7c2d00bd9d37269569fa7d87697df3119e601b59dfff9e4877d5"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "a4e4123786f3eb616a59370d18eaae68f2658cfadd9e7b977373ca584372de1f",
          "withoutMetadata": "affa85e3f2240f16943be08684ad081410d7aaf00b81e4b5d69c0a9a2a9981c4",
          "linkedWithoutMetadata": "affa85e3f2240f16943be08684ad081410d7aaf00b81e4b5d69c0a9a2a9981c4"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "aaee6d294794b36fdd7229f1f1e4ff12544687dceedf1545254f35712c537481",
          "withoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7",
          "linkedWithoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)29",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)29": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "39de362257b9f0e96b7c48d590d6c201b90d0b9805277b48c4cabe67f2286cbd",
          "withoutMetadata": "244991d1b9bc7c2d00bd9d37269569fa7d87697df3119e601b59dfff9e4877d5",
          "linkedWithoutMetadata": "244991d1b9bc7c2d00bd9d37269569fa7d87697df3119e601b59dfff9e4877d5"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "f765590d3ef6cc6a37f26309317dc456d874126d14f369941ca3ee89d391d33e",
          "withoutMetadata": "8a5d0bfc84fe8f8f469018a81ab97b29189c3bc97cb441fd53e4b082e2982d71",
          "linkedWithoutMetadata": "8a5d0bfc84fe8f8f469018a81ab97b29189c3bc97cb441fd53e4b082e2982d71"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "1df8f8de7c9dffd86cff86bc6e74c5c3ffcf3b1aeaf8380129e72551646e87c0",
          "withoutMetadata": "2580e81d7321251eff0362521f3b2cec06ca1ad08ac48696d5c2bf5515603a73",
          "linkedWithoutMetadata": "2580e81d7321251eff0362521f3b2cec06ca1ad08ac48696d5c2bf5515603a73"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "93dda12101556386c1c89de90fa299fab6f95daae761c3532b69a342686ae235",
          "withoutMetadata": "37ad8e69e99c473892892e6d4971b11a98332bb87f05a2b17e1469b7cd30457e",
          "linkedWithoutMetadata": "37ad8e69e99c473892892e6d4971b11a98332bb87f05a2b17e1469b7cd30457e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "a524a77cab8042c22e84706acfedf25b995fe6daa06a379b4477f184d1726c9b",
          "withoutMetadata": "f54314766ee6cf24d20f3348cea114c6c3bb5942cdea65d7dd08c04fc887317e",
          "linkedWithoutMetadata": "f54314766ee6cf24d20f3348cea114c6c3bb5942cdea65d7dd08c04fc887317e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "39de362257b9f0e96b7c48d590d6c201b90d0b9805277b48c4cabe67f2286cbd",
          "withoutMetadata": "244991d1b9bc7c2d00bd9d37269569fa7d87697df3119e601b59dfff9e4877d5",
          "linkedWithoutMetadata": "244991d1b9bc7c2d00bd9d37269569fa7d87697df3119e601b59dfff9e4877d5"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "02434a98269235d7f2ee354cd795c1337dc0cfc7f4289828a2dce56a7c6e70d1",
          "withoutMetadata": "8005c40874bbd8b7b77b6784e046210cf7de2b5c445b5ad0d9a62d6f68f731ad",
          "linkedWithoutMetadata": "8005c40874bbd8b7b77b6784e046210cf7de2b5c445b5ad0d9a62d6f68f731ad"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "0cd549113063b138544b2caac89e99d8b1df208184380bce3f969699fbfb7fc1",
          "withoutMetadata": "40732297384cd216b511eac0af7308260630adf06812ca3b14639d29898c637e",
          "linkedWithoutMetadata": "40732297384cd216b511eac0af7308260630adf06812ca3b14639d29898c637e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "allowance(address,address)",
          "approve(address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "98688ae8c2997251ce2a74517dc93658ef8800bf1c47e1bf784f8e20676a92d8",
          "withoutMetadata": "dd9a072a05ee6678bb34e06bb4a3006d3eb610e021fc89a766a949470b663400",
          "linkedWithoutMetadata": "dd9a072a05ee6678bb34e06bb4a3006d3eb610e021fc89a766a949470b663400"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "773e3a4121f0bf32eb2712f6073f854a87b40b894740415069367b5b9ee2fc9e",
          "withoutMetadata": "aad3b7068149a5bd54cba8ede718f6f90a0a568afe8b5bee3e01674016a64b96",
          "linkedWithoutMetadata": "aad3b7068149a5bd54cba8ede718f6f90a0a568afe8b5bee3e01674016a64b96"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "fddc7d8eebef61fdb1deab15b9e8162f085b8685c2b4d79dcc4a8171892779ca",
          "withoutMetadata": "54ec1e0b99e5e3f7b31323a859408b7fa82b37a488d5a2e62855a8d31d09080e",
          "linkedWithoutMetadata": "54ec1e0b99e5e3f7b31323a859408b7fa82b37a488d5a2e62855a8d31d09080e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "de0f0ddba64e7feca986e68127a44635b47cb8dae74d184951b1180886e4b789",
          "withoutMetadata": "223b526c2fb4a71f781618f44bac618b26ab27199a0a37030262a128876db1da",
          "linkedWithoutMetadata": "223b526c2fb4a71f781618f44bac618b26ab27199a0a37030262a128876db1da"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "9baed066fc66c09d89f99255d199d2da74570634bb4eb32410bcf6f0cf087318",
          "withoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7",
          "linkedWithoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)923",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)923": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "fd6b812f44973c58d80e1a480f74e687979f5ccf4d41314890b6dd6db381952d",
          "withoutMetadata": "e0d415889a4e2f93447178a35c56e4b2f6ca8a7e386867d0b4fc83deef4d61fb",
          "linkedWithoutMetadata": "e0d415889a4e2f93447178a35c56e4b2f6ca8a7e386867d0b4fc83deef4d61fb"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "ac46526627e6f0a762769d86ab594b03757ac7a02bbcb932618d56c8cd055ded",
          "withoutMetadata": "517b3d7b66a0487c24fbc9ed2e682c7633d3b4b0f74036c1c39a5101eadbab4d",
          "linkedWithoutMetadata": "517b3d7b66a0487c24fbc9ed2e682c7633d3b4b0f74036c1c39a5101eadbab4d"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "a3d0a049dbf8e8b4ff1f7d2b8a3aa79038988e47f21824c8778280d7d6d98e2f",
          "withoutMetadata": "8dcabafe522c087ad9157b5dd7b26a8854be505414657a2da41c9b59d730c8f0",
          "linkedWithoutMetadata": "8dcabafe522c087ad9157b5dd7b26a8854be505414657a2da41c9b59d730c8f0"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "d96066f7c09afe2736a774d06f168193a4a4d7755fa11c0f8d16cb89519c48b5",
          "withoutMetadata": "83318ac4a2fe144169698766e1c28b227fca746b833ab98e64669653d36d698b",
          "linkedWithoutMetadata": "83318ac4a2fe144169698766e1c28b227fca746b833ab98e64669653d36d698b"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "6daf91c3855a11f9ecfad7ac77245a5199d7ac9face383e026b907d3dc5aec5a",
          "withoutMetadata": "7a70aba588718470451606c864aca2efd44dd2f73ae0700fb6a4f409d345c911",
          "linkedWithoutMetadata": "7a70aba588718470451606c864aca2efd44dd2f73ae0700fb6a4f409d345c911"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "73d95d5ec2f3a7f3fd5cd6983bab87cb06d2efcf640f9194feea03b0002db6c4",
          "withoutMetadata": "fac96792c74db6fc52015f790337d19133970b89a95889a7619e341443528d9b",
          "linkedWithoutMetadata": "fac96792c74db6fc52015f790337d19133970b89a95889a7619e341443528d9b"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "d219f3e7cf6574037b6af5790384d386f759d27d19ce7d5ef170bfabbc86e5f9",
          "withoutMetadata": "fac96792c74db6fc52015f790337d19133970b89a95889a7619e341443528d9b",
          "linkedWithoutMetadata": "fac96792c74db6fc52015f790337d19133970b89a95889a7619e341443528d9b"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "6f43cd84aba997b4467784ee461b5dfcad79896eeedd14421364b66ea76d8ec0",
          "withoutMetadata": "fac96792c74db6fc52015f790337d19133970b89a95889a7619e341443528d9b",
          "linkedWithoutMetadata": "fac96792c74db6fc52015f790337d19133970b89a95889a7619e341443528d9b"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "5e05fd54494b7a30517d462fa61738e7dbdafa72dc44f456fcdb0232bb4d0146",
          "withoutMetadata": "5cfa95a5c4c36f0cf062c7fe63ee699ca9dfd37c46ec6c80b0d00c116c098ed1",
          "linkedWithoutMetadata": "5cfa95a5c4c36f0cf062c7fe63ee699ca9dfd37c46ec6c80b0d00c116c098ed1"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "91b8148669b48f2eec598b9db9048a10b14ab114a51c355d50bdcc978767a222",
          "withoutMetadata": "60dae8767d8a9b2c1508e09661a168a4a8fa8a9e3b1d2dddecfa9d90e4b179e1",
          "linkedWithoutMetadata": "60dae8767d8a9b2c1508e09661a168a4a8fa8a9e3b1d2dddecfa9d90e4b179e1"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "3cc46851ed4e5b16228de2cbd7c9182b9ff03ae5ac005b8ee2c6cba6e75d2044",
          "withoutMetadata": "7a70aba588718470451606c864aca2efd44dd2f73ae0700fb6a4f409d345c911",
          "linkedWithoutMetadata": "7a70aba588718470451606c864aca2efd44dd2f73ae0700fb6a4f409d345c911"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "bf394f5b45ac9f44bf70c713571376f3329952b2a6dac2f6aa3a3bd1afe5eec0",
          "withoutMetadata": "6a3167bf4bb9368ee99027237fb92ab26f8b9ea5601fc4041c5c7dc7ca106ca1",
          "linkedWithoutMetadata": "6a3167bf4bb9368ee99027237fb92ab26f8b9ea5601fc4041c5c7dc7ca106ca1"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "3cc46851ed4e5b16228de2cbd7c9182b9ff03ae5ac005b8ee2c6cba6e75d2044",
          "withoutMetadata": "7a70aba588718470451606c864aca2efd44dd2f73ae0700fb6a4f409d345c911",
          "linkedWithoutMetadata": "7a70aba588718470451606c864aca2efd44dd2f73ae0700fb6a4f409d345c911"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "fa82ffec0dd170ceb706d47c34576b7ff516604c0c4fb7246b7e943fc04f390c",
          "withoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570",
          "linkedWithoutMetadata": "88684ea76de08fa8deae7e178890aff55ab1c768fc2fef7807f087ff1a3af570"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "0dbbbc97c624710f38f6b9cc4b09dc33f8c35751daf3d188371b406c2c34c441",
          "withoutMetadata": "7a70aba588718470451606c864aca2efd44dd2f73ae0700fb6a4f409d345c911",
          "linkedWithoutMetadata": "7a70aba588718470451606c864aca2efd44dd2f73ae0700fb6a4f409d345c911"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "cb17e6fa4b91359eba2e4c3c024d8930bd024f937f04dc46ed2433b11c46a68d",
          "withoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7",
          "linkedWithoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "7ec9c0e0b9e039035eb681c92ecfba3658ed31cf2cbf2dcedfaf79a0ffcf1504",
          "withoutMetadata": "beeb0f7e257cfa3a870158675a6592650915c7ee45d6548ab93fedc64b00d471",
          "linkedWithoutMetadata": "beeb0f7e257cfa3a870158675a6592650915c7ee45d6548ab93fedc64b00d471"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "cb17e6fa4b91359eba2e4c3c024d8930bd024f937f04dc46ed2433b11c46a68d",
          "withoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7",
          "linkedWithoutMetadata": "207974eefe699e0eb353fb920fa8ca970106557d74f17ead4d7349574a5f1dd7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "36e9a24c83ffd1c2419908f04d31f7017f5fe23eaacdf7435b3ffd986ce017af",
          "withoutMetadata": "e236046ee789f121d9e5e862f68b94d7b4a73ac7697246b1bd8da4c87fbbcfa9",
          "linkedWithoutMetadata": "e236046ee789f121d9e5e862f68b94d7b4a73ac7697246b1bd8da4c87fbbcfa9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "61afa2482fee5b5feb2981cba797f2bf5b22bbe3364972b249ccc932a9b601c2",
          "withoutMetadata": "e25f6aa793ba2bae4f10c436a9ec5e65be5b45c8a490ab89e9c5334cb7100d5c",
          "linkedWithoutMetadata": "e25f6aa793ba2bae4f10c436a9ec5e65be5b45c8a490ab89e9c5334cb7100d5c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "b9113f3cc4f68fe79c037fcb4c933b5bfa531fe572d336dad86a0321a3f3c378",
          "withoutMetadata": "7111e5f0e374cd61f3d07a1a21ae4d413f551dfbd4651a02fc3a9386eebfc748",
          "linkedWithoutMetadata": "7111e5f0e374cd61f3d07a1a21ae4d413f551dfbd4651a02fc3a9386eebfc748"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "624670bd2e375cf4bb118644b5e0898837fa55cdd09ddce18a2e93b00b6c71a2",
          "withoutMetadata": "e25f6aa793ba2bae4f10c436a9ec5e65be5b45c8a490ab89e9c5334cb7100d5c",
          "linkedWithoutMetadata": "e25f6aa793ba2bae4f10c436a9ec5e65be5b45c8a490ab89e9c5334cb7100d5c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "4b72444c279c75013619ed8369ea8d956281353fff37d855c5442d896738c3dc",
          "withoutMetadata": "558fbdb767828794adbdaecc3c17a6bf227efd80ffbfa7373f8fd22b286536af",
          "linkedWithoutMetadata": "558fbdb767828794adbdaecc3c17a6bf227efd80ffbfa7373f8fd22b286536af"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "9c1d8b64e01ab30cd4a35d0fe3fcbe0f34cd1457f6031474b474a266f64bb927",
          "withoutMetadata": "9f56c8bc8d06d074cda981672801a9af8329f42d5d2195f42a71759523b33bb9",
          "linkedWithoutMetadata": "9f56c8bc8d06d074cda981672801a9af8329f42d5d2195f42a71759523b33bb9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "84d849374a65b5fa1340378f45a8bdc6838c2dd7effcc7861115105971da52e1",
          "withoutMetadata": "d3164c391e2cd7436941d86d40dbd656a0c95dcb235278f067e7f7ef00ffb23f",
          "linkedWithoutMetadata": "d3164c391e2cd7436941d86d40dbd656a0c95dcb235278f067e7f7ef00ffb23f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "9c1d8b64e01ab30cd4a35d0fe3fcbe0f34cd1457f6031474b474a266f64bb927",
          "withoutMetadata": "9f56c8bc8d06d074cda981672801a9af8329f42d5d2195f42a71759523b33bb9",
          "linkedWithoutMetadata": "9f56c8bc8d06d074cda981672801a9af8329f42d5d2195f42a71759523b33bb9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "fe991fc5117d52e496ced7af92ef25fe21d2a35d909462f9289c3b169a638de7",
          "withoutMetadata": "073d08258f016da5cbf44347ba20b2ffbba658ee0adbecf83668929e4c7c111e",
          "linkedWithoutMetadata": "073d08258f016da5cbf44347ba20b2ffbba658ee0adbecf83668929e4c7c111e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "c6e0f874bdd812c788731ea5c2e9c03b7cf04439b86a6ab609c23e50dd305302",
          "withoutMetadata": "28fe4cad3962a0c7bcad53f4d47f9adb17cb2b511e58fc038eabaa49f666e9fd",
          "linkedWithoutMetadata": "28fe4cad3962a0c7bcad53f4d47f9adb17cb2b511e58fc038eabaa49f666e9fd"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "4b72444c279c75013619ed8369ea8d956281353fff37d855c5442d896738c3dc",
          "withoutMetadata": "558fbdb767828794adbdaecc3c17a6bf227efd80ffbfa7373f8fd22b286536af",
          "linkedWithoutMetadata": "558fbdb767828794adbdaecc3c17a6bf227efd80ffbfa7373f8fd22b286536af"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "b9ca9d18dbdab467c962495289b13bd6801a94213796233e941146c22dacec50",
          "withoutMetadata": "499740ecca8c2dd38d1121ea1a4a2f6492828b703e3ad1aeda5772a3f1acc6eb",
          "linkedWithoutMetadata": "499740ecca8c2dd38d1121ea1a4a2f6492828b703e3ad1aeda5772a3f1acc6eb"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "b5bff4e2d5975bad1c46686f809c20cccbc5ef412b6ba2dbbe6a3a8f4387206c",
          "withoutMetadata": "76490952b66f775116cced34330f6adec67197433513a21c8ba0801787f72a0a",
          "linkedWithoutMetadata": "76490952b66f775116cced34330f6adec67197433513a21c8ba0801787f72a0a"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "1cd313597b0adb75072c18b1d928370bc73f08973952588f2c31383c67694bba",
          "withoutMetadata": "28fe4cad3962a0c7bcad53f4d47f9adb17cb2b511e58fc038eabaa49f666e9fd",
          "linkedWithoutMetadata": "28fe4cad3962a0c7bcad53f4d47f9adb17cb2b511e58fc038eabaa49f666e9fd"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,uint256)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "9c1d8b64e01ab30cd4a35d0fe3fcbe0f34cd1457f6031474b474a266f64bb927",
          "withoutMetadata": "9f56c8bc8d06d074cda981672801a9af8329f42d5d2195f42a71759523b33bb9",
          "linkedWithoutMetadata": "9f56c8bc8d06d074cda981672801a9af8329f42d5d2195f42a71759523b33bb9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "7b1124506b6eac6d95bb41932da0700eeccf2231a05ce7170a252ed9b922422c",
          "withoutMetadata": "e34385b4eb0b4b679801ae48a946b8817c88d49da0084da504f265e88a2b3577",
          "linkedWithoutMetadata": "e34385b4eb0b4b679801ae48a946b8817c88d49da0084da504f265e88a2b3577"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "6ceeb93ab383c8643e129e90545dfa971a8b55d142691221183c7d4ec0d84296",
          "withoutMetadata": "04ee8efe0b7ce10365689806f85b8e8d23ada0026e34b5cbe3adc968b0d150ea",
          "linkedWithoutMetadata": "04ee8efe0b7ce10365689806f85b8e8d23ada0026e34b5cbe3adc968b0d150ea"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "29e0249a46ef15add233397382da9778cc144135db71c50dee9e5d877ad09f4d",
          "withoutMetadata": "6221d25901661babeb6cd48148e75618daf469b8f1647b899d68f1880f304497",
          "linkedWithoutMetadata": "6221d25901661babeb6cd48148e75618daf469b8f1647b899d68f1880f304497"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "ae52b32163f08bf1e1aefba493d14fec6b619d284e6474253f62c122bdf87fd5",
          "withoutMetadata": "a9324b4712162ca30742dcfbdaf0546c97bf720297573d61b27ddafefba8d08a",
          "linkedWithoutMetadata": "a9324b4712162ca30742dcfbdaf0546c97bf720297573d61b27ddafefba8d08a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "4c5b82bd7a08d8cf8e8e601842f26ae77c7c05940b67f8509e52a7a026663105",
          "withoutMetadata": "6221d25901661babeb6cd48148e75618daf469b8f1647b899d68f1880f304497",
          "linkedWithoutMetadata": "6221d25901661babeb6cd48148e75618daf469b8f1647b899d68f1880f304497"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "02e4246c95afeaa3b1398857310b6df28811996cf8270a98577c218917f36dc9",
          "withoutMetadata": "6ab6065d4993f257dc6982ffc056d4b9acf6c2c6755ca4b1fe7863aa4ef7e948",
          "linkedWithoutMetadata": "6ab6065d4993f257dc6982ffc056d4b9acf6c2c6755ca4b1fe7863aa4ef7e948"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/SwapToken.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "532ec67295e3f1d00fd604d3bdf9cdaaec9677bc07ad9419fcd41ecfb1001b8a",
          "withoutMetadata": "02a0b3663ff503f0873fd55c6bb6a8107bc21144d514037b2666b911d0a9a455",
          "linkedWithoutMetadata": "02a0b3663ff503f0873fd55c6bb6a8107bc21144d514037b2666b911d0a9a455"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)38",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)38": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "b597c66e333bb83a40708f3c0d4f132219d21df543b71683851cb550c1978369",
          "withoutMetadata": "2e1729606352b1b5c904ea6fdcdbc822e838cc3c464e7e8e9822018b64adc274",
          "linkedWithoutMetadata": "2e1729606352b1b5c904ea6fdcdbc822e838cc3c464e7e8e9822018b64adc274"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)923",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)923": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "5b0cd8e67f0858a75f40bf339c92cff3ec51360f5f8991eb9b02da52cb494914",
          "withoutMetadata": "28fe4cad3962a0c7bcad53f4d47f9adb17cb2b511e58fc038eabaa49f666e9fd",
          "linkedWithoutMetadata": "28fe4cad3962a0c7bcad53f4d47f9adb17cb2b511e58fc038eabaa49f666e9fd"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "a94d77f4cd794d61aa64a5a5b630e6ca44d407c9c386d3cc57a1a3f1dfe429fb",
          "withoutMetadata": "1f7c2a37a2d3b06fbee48bb6475dfdcd6ec2437977495c145ed10d03c8fc5de2",
          "linkedWithoutMetadata": "1f7c2a37a2d3b06fbee48bb6475dfdcd6ec2437977495c145ed10d03c8fc5de2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "1452a611bf6b43dc9f9f8fbefc3b79c2f714afe73c2d4e25ebaab00a091cd7d9",
          "withoutMetadata": "7a9758b16f7b1015f44897112ab5962f5d22fb2f2e6aca3d670dc6ec380d87dc",
          "linkedWithoutMetadata": "7a9758b16f7b1015f44897112ab5962f5d22fb2f2e6aca3d670dc6ec380d87dc"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "de9cb640b836c55aa17279a1948b0a21db0452e0b96c058a3504136f774f845e",
          "withoutMetadata": "a0530955ac1ca2cac6e14ad0816c9deff02d488b415c136e505a4ea3f8d9d072",
          "linkedWithoutMetadata": "a0530955ac1ca2cac6e14ad0816c9deff02d488b415c136e505a4ea3f8d9d072"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "d567af6ef26a03689551b619622d6782dedd730e6e724b0eb8b33792996a9997",
          "withoutMetadata": "3935fad3f215092c7a5bddbdcbc3d192b86305d581c7bac0c3d0e60566ea0a1b",
          "linkedWithoutMetadata": "3935fad3f215092c7a5bddbdcbc3d192b86305d581c7bac0c3d0e60566ea0a1b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "6b02950fd76c8e49b267a80c300f8d03d974079aed2dcac4bd75e7a94d1b4d82",
          "withoutMetadata": "3935fad3f215092c7a5bddbdcbc3d192b86305d581c7bac0c3d0e60566ea0a1b",
          "linkedWithoutMetadata": "3935fad3f215092c7a5bddbdcbc3d192b86305d581c7bac0c3d0e60566ea0a1b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "3debf128bbe9d379c67bad8ca53f2dfbbb3f71db9e4a6bd273496ec68098b2c1",
          "withoutMetadata": "1f7c2a37a2d3b06fbee48bb6475dfdcd6ec2437977495c145ed10d03c8fc5de2",
          "linkedWithoutMetadata": "1f7c2a37a2d3b06fbee48bb6475dfdcd6ec2437977495c145ed10d03c8fc5de2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)934",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)934": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "82481f7f9212f9adb0b91115027a3f95b690ac908043918f45c2dcb6519e3377",
          "withoutMetadata": "49b8f4d119027800a79fdab1d28b60d1ff86db5c1c95d50562ca61a8ce51b710",
          "linkedWithoutMetadata": "49b8f4d119027800a79fdab1d28b60d1ff86db5c1c95d50562ca61a8ce51b710"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,address,uint256)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "93601aa43a1f37a733828dd88ea36ca9c71a48ad2c3d33f67ac2f9fd1cb2e45c",
          "withoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042",
          "linkedWithoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV2": {
        "src": "contracts/YutengV2.sol:5",
        "version": {
          "withMetadata": "b9d998911c36bba1456d7b0ddeba4eeeecac46c0c91da1fbe729b40d84a3e3f4",
          "withoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a",
          "linkedWithoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "setsCcore(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV2",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV2.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "3debf128bbe9d379c67bad8ca53f2dfbbb3f71db9e4a6bd273496ec68098b2c1",
          "withoutMetadata": "1f7c2a37a2d3b06fbee48bb6475dfdcd6ec2437977495c145ed10d03c8fc5de2",
          "linkedWithoutMetadata": "1f7c2a37a2d3b06fbee48bb6475dfdcd6ec2437977495c145ed10d03c8fc5de2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "da6b3696267bd32dddf41f8021ca30d8529309789c5ec6ad6e23d2a87a4430b5",
          "withoutMetadata": "e71432701b6fa0059216a98c59a2bd160d214e3ffb6a0c44c9f9778d83b1d1bf",
          "linkedWithoutMetadata": "e71432701b6fa0059216a98c59a2bd160d214e3ffb6a0c44c9f9778d83b1d1bf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "93bfddf2bc6a549770386d64d4b28d33e6500f4517b6a366bd0cd906ba0cb8c8",
          "withoutMetadata": "6bc32c139ddb9c79a609d85a7df85ab0b733f1b3124ea59ce683678f2cbb164d",
          "linkedWithoutMetadata": "6bc32c139ddb9c79a609d85a7df85ab0b733f1b3124ea59ce683678f2cbb164d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "4698fef8cf4bd84feabfbc646c89a2cbd65a52101535825730d3651e1c79e56c",
          "withoutMetadata": "6bc32c139ddb9c79a609d85a7df85ab0b733f1b3124ea59ce683678f2cbb164d",
          "linkedWithoutMetadata": "6bc32c139ddb9c79a609d85a7df85ab0b733f1b3124ea59ce683678f2cbb164d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "c0e5001f5adf3dff026f96060a89cc888c0bfafb2d848c107b6432d923f4b546",
          "withoutMetadata": "a7c204a26443ab412d5566142c553b55f94a7fc31c2d8e4ea7bc09b4fc088853",
          "linkedWithoutMetadata": "a7c204a26443ab412d5566142c553b55f94a7fc31c2d8e4ea7bc09b4fc088853"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "6b6b1f3bb0a74bc5fcb72e30f5772efb42a1145da0579b2fecebd3850cfa33bd",
          "withoutMetadata": "241c7f1509e59209783365aad8a921517e19bcf08eaaa84fd8a7fba9e9455931",
          "linkedWithoutMetadata": "241c7f1509e59209783365aad8a921517e19bcf08eaaa84fd8a7fba9e9455931"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "c20ba18639f71af1436bcc89cc9823f09de22aa5027569101aca60bbb4013fa0",
          "withoutMetadata": "b930caef2c326250fe728338ec96d6862fd7d86bcb0521c6127ca16dfa9ad885",
          "linkedWithoutMetadata": "b930caef2c326250fe728338ec96d6862fd7d86bcb0521c6127ca16dfa9ad885"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "a85c178df679cad7233354b52401f1d670186cdc043bb4afc15fdf96450c0dff",
          "withoutMetadata": "f1a23ef8b7e7a9baa31cd4178cada6c0d31045333b5564b4a9c23276fd70d5b9",
          "linkedWithoutMetadata": "f1a23ef8b7e7a9baa31cd4178cada6c0d31045333b5564b4a9c23276fd70d5b9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "38aa433a4af365e71c08af1971966e7b539f1aa67ac2902fa7f73004082ba20b",
          "withoutMetadata": "304c0a3a920107aef5a9f44674b2069fc75f3f2201317dca0dfbf4f80de39625",
          "linkedWithoutMetadata": "304c0a3a920107aef5a9f44674b2069fc75f3f2201317dca0dfbf4f80de39625"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "3bd7b412836a2b42ae4d395463d82334f4af47ff4eec6320782889c112fd06b8",
          "withoutMetadata": "f1d4ad63c83ee1d5c47eca689c508360a904cbd6aad18fea5f85f903fee7ae4b",
          "linkedWithoutMetadata": "f1d4ad63c83ee1d5c47eca689c508360a904cbd6aad18fea5f85f903fee7ae4b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "22ae8d5587ccba504863be014dcc32bf8bd34c2280667a3e5cc0a29d3e43b08a",
          "withoutMetadata": "867b3201195fad4e41111b0c358ce68447601963c36e60066f9688a1a3f8a2e1",
          "linkedWithoutMetadata": "867b3201195fad4e41111b0c358ce68447601963c36e60066f9688a1a3f8a2e1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "9ca02543f008717234ca22c34614cbb568048ff0b7e105a35170a9d7c6395b33",
          "withoutMetadata": "516b1b64ebc9d7e1ef0b507e9e18aae658941b53d191d0f2efa4b08e980b2186",
          "linkedWithoutMetadata": "516b1b64ebc9d7e1ef0b507e9e18aae658941b53d191d0f2efa4b08e980b2186"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "99d4232c8171bbe23a15199c871b9cdb7089485126e374e1773ddc310b96a164",
          "withoutMetadata": "516b1b64ebc9d7e1ef0b507e9e18aae658941b53d191d0f2efa4b08e980b2186",
          "linkedWithoutMetadata": "516b1b64ebc9d7e1ef0b507e9e18aae658941b53d191d0f2efa4b08e980b2186"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "c930a116d4f8f44aa680637e4b66df0e0cf74b69bb473a20433f55419bf3dcd6",
          "withoutMetadata": "b4006ec4e12a651811729f86200cb6f35bdef9a3f27db35dc023eac176b4316d",
          "linkedWithoutMetadata": "b4006ec4e12a651811729f86200cb6f35bdef9a3f27db35dc023eac176b4316d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "311e009946f0100d1c310fb6982ae955dc18a05d0f2939cc7d40dd7b08a3b706",
          "withoutMetadata": "b4006ec4e12a651811729f86200cb6f35bdef9a3f27db35dc023eac176b4316d",
          "linkedWithoutMetadata": "b4006ec4e12a651811729f86200cb6f35bdef9a3f27db35dc023eac176b4316d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "816383dc1575f9393d3feaf43a781cdbd13c37c6aa17add74314b0688d2880e1",
          "withoutMetadata": "0f2f86be1c80bfe7c3ce27445ad5a498fed0723a600c8ac742cf48c4837c5c86",
          "linkedWithoutMetadata": "0f2f86be1c80bfe7c3ce27445ad5a498fed0723a600c8ac742cf48c4837c5c86"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "732cf14418e468063f423bcb9c94d6c54e8c9ce34f79939e3a492ceadd1abe8e",
          "withoutMetadata": "3bdc2995327f04e662830d711abb9fd94d2bb3b21c6b3fa63602e0b322848013",
          "linkedWithoutMetadata": "3bdc2995327f04e662830d711abb9fd94d2bb3b21c6b3fa63602e0b322848013"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "8d6cefe652acc3f06a95162556701e474503ec7cf25f9edc22dbbaa4f7f68ad7",
          "withoutMetadata": "6bf87caaa304b33b9613674ee472aee727147ef1a4097e9ca23cc5fbdd7f8204",
          "linkedWithoutMetadata": "6bf87caaa304b33b9613674ee472aee727147ef1a4097e9ca23cc5fbdd7f8204"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "5b6af674a3a52c35b998409bec874fe0b69cede027e7a20f1ab2b356b8bae0c1",
          "withoutMetadata": "15a28e7109d902cde2db258ea55f876b8798925c73122bd9737ae169254aebc6",
          "linkedWithoutMetadata": "15a28e7109d902cde2db258ea55f876b8798925c73122bd9737ae169254aebc6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "bdd9a4fdfce01b0b656acc4f339e763931f08636564eb83e5a4e2d196738de57",
          "withoutMetadata": "4f88095b9b45a1df68b0ee3a498d297093939ccbb330526d89ffac4600ecb906",
          "linkedWithoutMetadata": "4f88095b9b45a1df68b0ee3a498d297093939ccbb330526d89ffac4600ecb906"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "ce1329c94bdac8dd5e3de6d77ccabed3e482617a8e0196f7e1ad96e4cd94ff95",
          "withoutMetadata": "f99e978d4cca5b02b5cfc29c1372be3c5e7d6474ee8c8bbe6e238607a5d121eb",
          "linkedWithoutMetadata": "f99e978d4cca5b02b5cfc29c1372be3c5e7d6474ee8c8bbe6e238607a5d121eb"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "5db5ca29ab474d2446f5d5b376d33fc533252df6e02de289de408ed1bacca771",
          "withoutMetadata": "738592e1c84de2f610b5c961e4c4a7d70c873490d8b8657bb0c19057d336a89c",
          "linkedWithoutMetadata": "738592e1c84de2f610b5c961e4c4a7d70c873490d8b8657bb0c19057d336a89c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:15",
        "version": {
          "withMetadata": "0f7c08deedfd9145cb2153e1c3e4d2270bda4038e52817d9700c6a96bf776561",
          "withoutMetadata": "8d26b1d924f6802c6057ae50988d63ced9fc3473043c4c10233bd94c2ee65dd2",
          "linkedWithoutMetadata": "8d26b1d924f6802c6057ae50988d63ced9fc3473043c4c10233bd94c2ee65dd2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)49",
              "src": "contracts/SwapToken.sol:16"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:17"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)49": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "eee0dd3fd122fcd3a18b9eff3d3f708f1db11eef6072977af5d3caa5ffa3ab0a",
          "withoutMetadata": "3bdc2995327f04e662830d711abb9fd94d2bb3b21c6b3fa63602e0b322848013",
          "linkedWithoutMetadata": "3bdc2995327f04e662830d711abb9fd94d2bb3b21c6b3fa63602e0b322848013"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)931",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)931": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "82481f7f9212f9adb0b91115027a3f95b690ac908043918f45c2dcb6519e3377",
          "withoutMetadata": "49b8f4d119027800a79fdab1d28b60d1ff86db5c1c95d50562ca61a8ce51b710",
          "linkedWithoutMetadata": "49b8f4d119027800a79fdab1d28b60d1ff86db5c1c95d50562ca61a8ce51b710"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,address,uint256)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "93601aa43a1f37a733828dd88ea36ca9c71a48ad2c3d33f67ac2f9fd1cb2e45c",
          "withoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042",
          "linkedWithoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV2": {
        "src": "contracts/YutengV2.sol:5",
        "version": {
          "withMetadata": "b9d998911c36bba1456d7b0ddeba4eeeecac46c0c91da1fbe729b40d84a3e3f4",
          "withoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a",
          "linkedWithoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "setsCcore(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV2",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV2.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "eee0dd3fd122fcd3a18b9eff3d3f708f1db11eef6072977af5d3caa5ffa3ab0a",
          "withoutMetadata": "3bdc2995327f04e662830d711abb9fd94d2bb3b21c6b3fa63602e0b322848013",
          "linkedWithoutMetadata": "3bdc2995327f04e662830d711abb9fd94d2bb3b21c6b3fa63602e0b322848013"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)",
          "transferToContractTest(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)46",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)46": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "82481f7f9212f9adb0b91115027a3f95b690ac908043918f45c2dcb6519e3377",
          "withoutMetadata": "49b8f4d119027800a79fdab1d28b60d1ff86db5c1c95d50562ca61a8ce51b710",
          "linkedWithoutMetadata": "49b8f4d119027800a79fdab1d28b60d1ff86db5c1c95d50562ca61a8ce51b710"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "approve(address,address,uint256)",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8e2bd86a4ebf8e15c5b6b1dcdc143585d778fe9539371e9e461d1f6798b54f44",
          "withoutMetadata": "cdf2061cc58b6040d387bd71bfec81eb6f32007e8605fef1ce456b71ca40e1cc",
          "linkedWithoutMetadata": "cdf2061cc58b6040d387bd71bfec81eb6f32007e8605fef1ce456b71ca40e1cc"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "ff474c2fec6cc9d84007175c25bafa853ed5b07fec89d573ea1c203e9844e21e",
          "withoutMetadata": "032418a14495ed2750080cfb04c02bc9d8a456024d321e78503a6fe9f2c3a3d1",
          "linkedWithoutMetadata": "032418a14495ed2750080cfb04c02bc9d8a456024d321e78503a6fe9f2c3a3d1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)908",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)908": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "92eade3016d12f1c487433dcdbd43f2a3bbe159bf208f53a7449cc2dd26a9390",
          "withoutMetadata": "b42d95c283895c1f88f3b580ac09313315d7f48f37ea3855c3d17e8a202b79da",
          "linkedWithoutMetadata": "b42d95c283895c1f88f3b580ac09313315d7f48f37ea3855c3d17e8a202b79da"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "40bf9be26f4371585af12f672a3c74bd26b8d208150678ee0d17f3a660fc880f",
          "withoutMetadata": "79e7cfadf55993e3698c26b9e8801635ea335c6dd66844e85d8561541033a3ee",
          "linkedWithoutMetadata": "79e7cfadf55993e3698c26b9e8801635ea335c6dd66844e85d8561541033a3ee"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)44",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)44": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "0bcdd34f8ffa04e9803bd637317f6d6d74f50c9e299d32437880029fdf0b6f1e",
          "withoutMetadata": "cbb1dd6cb91a0f82d5da45ce655462819f4a48183554b7cb5bbf5c80c70fb945",
          "linkedWithoutMetadata": "cbb1dd6cb91a0f82d5da45ce655462819f4a48183554b7cb5bbf5c80c70fb945"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "0c1386e2b8d6b3446d764b250a5f1b751d1b71351632b9ce83d164d0847247d5",
          "withoutMetadata": "9cc535ffb1a75701ce753b84ce4283a7f3d80f22a0d821bce6bde6698cb92895",
          "linkedWithoutMetadata": "9cc535ffb1a75701ce753b84ce4283a7f3d80f22a0d821bce6bde6698cb92895"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "94c8b6d4d00a11b255cb746b17065d95326d423b19bc61c89f56f31739ecb191",
          "withoutMetadata": "58e140ed8f94551fb6cfd3568d8c9b5e0aa69f8ef73df77d52b982690f26d3a7",
          "linkedWithoutMetadata": "58e140ed8f94551fb6cfd3568d8c9b5e0aa69f8ef73df77d52b982690f26d3a7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "transferToContract(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)44",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)44": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "b04ddc85d0e40990fce4ce5c5ab218871e9d7d753ebcca276fc917e75181a666",
          "withoutMetadata": "3aee3173210c088db329f6626ad6e143de552577dbe682379afb7866bc57a970",
          "linkedWithoutMetadata": "3aee3173210c088db329f6626ad6e143de552577dbe682379afb7866bc57a970"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)44",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)44": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "8283d396d10b7f2213435eba79c538d93ce70e0f20086ca46393d09c4c2ce702",
          "withoutMetadata": "b083eafb40b1918558ae206ef256488ecb50c32fd59c5439fc6b2503720c2377",
          "linkedWithoutMetadata": "b083eafb40b1918558ae206ef256488ecb50c32fd59c5439fc6b2503720c2377"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)44",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)44": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "40bf9be26f4371585af12f672a3c74bd26b8d208150678ee0d17f3a660fc880f",
          "withoutMetadata": "79e7cfadf55993e3698c26b9e8801635ea335c6dd66844e85d8561541033a3ee",
          "linkedWithoutMetadata": "79e7cfadf55993e3698c26b9e8801635ea335c6dd66844e85d8561541033a3ee"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)44",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)44": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "12e443ebd52dc7c2b00c33d1b8e374754f99704731f51ea356ee0173f83dc457",
          "withoutMetadata": "45d4d2fe213a664c4e2becfd592674bf50b1b2e768d7798ca920f2d000ac5f3f",
          "linkedWithoutMetadata": "45d4d2fe213a664c4e2becfd592674bf50b1b2e768d7798ca920f2d000ac5f3f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)44",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)44": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "6dd8294c7e22cd467c9004a4f28b500945e2778f4664d55dad709a1838e008d7",
          "withoutMetadata": "98a05eec458971b109c4d7f7bbee54251ac837fd06ad6afd88afe6c98fb8b140",
          "linkedWithoutMetadata": "98a05eec458971b109c4d7f7bbee54251ac837fd06ad6afd88afe6c98fb8b140"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)44",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)44": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "12e443ebd52dc7c2b00c33d1b8e374754f99704731f51ea356ee0173f83dc457",
          "withoutMetadata": "45d4d2fe213a664c4e2becfd592674bf50b1b2e768d7798ca920f2d000ac5f3f",
          "linkedWithoutMetadata": "45d4d2fe213a664c4e2becfd592674bf50b1b2e768d7798ca920f2d000ac5f3f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)44",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)44": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "f3189747f496adbc6eb866de3fbe30e58225049987946296e91e93a7a271c170",
          "withoutMetadata": "45d4d2fe213a664c4e2becfd592674bf50b1b2e768d7798ca920f2d000ac5f3f",
          "linkedWithoutMetadata": "45d4d2fe213a664c4e2becfd592674bf50b1b2e768d7798ca920f2d000ac5f3f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)44",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)44": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "75f7275f8411c9d652f63aef02c42de0630f71ced870c6b69a9d50ca6d4fea2c",
          "withoutMetadata": "98a05eec458971b109c4d7f7bbee54251ac837fd06ad6afd88afe6c98fb8b140",
          "linkedWithoutMetadata": "98a05eec458971b109c4d7f7bbee54251ac837fd06ad6afd88afe6c98fb8b140"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)44",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)44": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "f3189747f496adbc6eb866de3fbe30e58225049987946296e91e93a7a271c170",
          "withoutMetadata": "45d4d2fe213a664c4e2becfd592674bf50b1b2e768d7798ca920f2d000ac5f3f",
          "linkedWithoutMetadata": "45d4d2fe213a664c4e2becfd592674bf50b1b2e768d7798ca920f2d000ac5f3f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)",
          "transferToContract(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)44",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)44": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "7607a8dbdde7b77da488284d24032a503102db4ee24bb32ad4eed8905d89123a",
          "withoutMetadata": "c0182eb878ca7552c291a12d57b357d11428a4271b2ba8131a6bf1cc20d419e5",
          "linkedWithoutMetadata": "c0182eb878ca7552c291a12d57b357d11428a4271b2ba8131a6bf1cc20d419e5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)44",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)44": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "9f4d5e984afbca8460fdac761179d632aec44fc2e6755881a39818e85428a523",
          "withoutMetadata": "72aac0155fc6b80f68c19f5a3c8022a1d977cdf071be9580d259e17cef03e7ab",
          "linkedWithoutMetadata": "72aac0155fc6b80f68c19f5a3c8022a1d977cdf071be9580d259e17cef03e7ab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)44",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)44": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "0727d35e3b16e2ed1152da165fdf74b40672acd5060717053158b4fc8e30be15",
          "withoutMetadata": "63b1820149572cdf66c96192206f9159b7349aff2d715c61d2e87f0adaba81f1",
          "linkedWithoutMetadata": "63b1820149572cdf66c96192206f9159b7349aff2d715c61d2e87f0adaba81f1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "d799bc653b81c13e342bd1cd94331bd925e7b5666f9a357bbd29fa15a23b7b75",
          "withoutMetadata": "f85bf8cd13ae14c37b1234ad69606640a1b58afb1ea2214bd0649b5c9dae68db",
          "linkedWithoutMetadata": "f85bf8cd13ae14c37b1234ad69606640a1b58afb1ea2214bd0649b5c9dae68db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "0727d35e3b16e2ed1152da165fdf74b40672acd5060717053158b4fc8e30be15",
          "withoutMetadata": "63b1820149572cdf66c96192206f9159b7349aff2d715c61d2e87f0adaba81f1",
          "linkedWithoutMetadata": "63b1820149572cdf66c96192206f9159b7349aff2d715c61d2e87f0adaba81f1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "945c17272e7e6442bd9c01f65c8efd2f37517f6f7b9667f17b881d45ebe9b140",
          "withoutMetadata": "a21e767251b3111b66884b9ee00297df0b63d741858e7221a3a271de97a379a5",
          "linkedWithoutMetadata": "a21e767251b3111b66884b9ee00297df0b63d741858e7221a3a271de97a379a5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "b03a4dd61d88de515257cc739df81d59d10fdd46791415aae3bd9fe6c7bab30d",
          "withoutMetadata": "3aee3173210c088db329f6626ad6e143de552577dbe682379afb7866bc57a970",
          "linkedWithoutMetadata": "3aee3173210c088db329f6626ad6e143de552577dbe682379afb7866bc57a970"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "945c17272e7e6442bd9c01f65c8efd2f37517f6f7b9667f17b881d45ebe9b140",
          "withoutMetadata": "a21e767251b3111b66884b9ee00297df0b63d741858e7221a3a271de97a379a5",
          "linkedWithoutMetadata": "a21e767251b3111b66884b9ee00297df0b63d741858e7221a3a271de97a379a5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "b03a4dd61d88de515257cc739df81d59d10fdd46791415aae3bd9fe6c7bab30d",
          "withoutMetadata": "3aee3173210c088db329f6626ad6e143de552577dbe682379afb7866bc57a970",
          "linkedWithoutMetadata": "3aee3173210c088db329f6626ad6e143de552577dbe682379afb7866bc57a970"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:12",
        "version": {
          "withMetadata": "b6eec3922f0265b16fe60f0bac2cb5c5829f12fa20f06678ba0968deb4a6a07a",
          "withoutMetadata": "58e140ed8f94551fb6cfd3568d8c9b5e0aa69f8ef73df77d52b982690f26d3a7",
          "linkedWithoutMetadata": "58e140ed8f94551fb6cfd3568d8c9b5e0aa69f8ef73df77d52b982690f26d3a7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance()",
          "test()",
          "transferToContract(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:13"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "625725c167a83aaac0cd18ddc682340b486b7036ad160dbb7f951b9e938b5af0",
          "withoutMetadata": "846ed166b417818949c56b12b7e3519d45fe80d9b6628c06b886e06e31782bdb",
          "linkedWithoutMetadata": "846ed166b417818949c56b12b7e3519d45fe80d9b6628c06b886e06e31782bdb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)46",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)46": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "6496bde026e2aaeb3670f552663b8353bd1f9c477f72d9d6c42eb800804a7b5c",
          "withoutMetadata": "2a64af5c66be756e8e274c3107b935f0527ad8ea3a9aaea276515d456fdcd806",
          "linkedWithoutMetadata": "2a64af5c66be756e8e274c3107b935f0527ad8ea3a9aaea276515d456fdcd806"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance(address)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)46",
              "src": "contracts/SwapToken.sol:14"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:15"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)46": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:40",
        "version": {
          "withMetadata": "a8e011658e3d5b694ebfa7d311507264ffb4508a6c56bfe5fe91f0b11705db56",
          "withoutMetadata": "2a64af5c66be756e8e274c3107b935f0527ad8ea3a9aaea276515d456fdcd806",
          "linkedWithoutMetadata": "2a64af5c66be756e8e274c3107b935f0527ad8ea3a9aaea276515d456fdcd806"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance(address)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)46",
              "src": "contracts/SwapToken.sol:40"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:41"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)46": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:40",
        "version": {
          "withMetadata": "21b4a799fb1aac488d566add4251f5331439ec770558aa70d36c71eb3be31635",
          "withoutMetadata": "7fd2e0135d29333fcf2289ffba790284f5330202d59eaa430a63d824367d3f7a",
          "linkedWithoutMetadata": "7fd2e0135d29333fcf2289ffba790284f5330202d59eaa430a63d824367d3f7a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)",
          "allowance(address)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)46",
              "src": "contracts/SwapToken.sol:40"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:41"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)46": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:40",
        "version": {
          "withMetadata": "9330c73c24326e9c98c272acf2c87f0ba66ae21579ca049c340c165487e22cc7",
          "withoutMetadata": "f7a40778d6296ba42fbc6b29a4d89eb63fb13eb4628931b9211c7e0373324faa",
          "linkedWithoutMetadata": "f7a40778d6296ba42fbc6b29a4d89eb63fb13eb4628931b9211c7e0373324faa"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)46",
              "src": "contracts/SwapToken.sol:40"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:41"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)46": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:40",
        "version": {
          "withMetadata": "397cd0401f58e49a0118867b7d0d7c65a897fb84181be158b5701410e8d37045",
          "withoutMetadata": "1c40f307c2d7a3c023251666e92d563b9ec5b07e03ff043596a303180f1be682",
          "linkedWithoutMetadata": "1c40f307c2d7a3c023251666e92d563b9ec5b07e03ff043596a303180f1be682"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)46",
              "src": "contracts/SwapToken.sol:40"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:41"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)46": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:40",
        "version": {
          "withMetadata": "5af37542373c04483d280048bf76e9c3e9d837439a31a01a6140f6f84fe6d4c3",
          "withoutMetadata": "e2da36f3efe9dae29773b639ce7ce36b7b3fd1f71cf3349621f9582b3163dc04",
          "linkedWithoutMetadata": "e2da36f3efe9dae29773b639ce7ce36b7b3fd1f71cf3349621f9582b3163dc04"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)46",
              "src": "contracts/SwapToken.sol:40"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:41"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)46": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:40",
        "version": {
          "withMetadata": "4ee32d73660a48ed118a746679ae36b2731d4c1db114c5dc3b3b4b88e45cbf6b",
          "withoutMetadata": "21ab271829c175d03d0efdd4b84bcf8026678705b2ccbcf285e0235d2cf1d655",
          "linkedWithoutMetadata": "21ab271829c175d03d0efdd4b84bcf8026678705b2ccbcf285e0235d2cf1d655"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)46",
              "src": "contracts/SwapToken.sol:40"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:41"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)46": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:40",
        "version": {
          "withMetadata": "2e3409e793bbd7bf856593d806a46162979c233e131e6e927e4a6bf4402b814d",
          "withoutMetadata": "e98e68856057e0f9b2c9ee1370347056bccb8e040ee258cb2769f693ffcf42e9",
          "linkedWithoutMetadata": "e98e68856057e0f9b2c9ee1370347056bccb8e040ee258cb2769f693ffcf42e9"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)46",
              "src": "contracts/SwapToken.sol:40"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:41"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)46": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:40",
        "version": {
          "withMetadata": "657502aef1a8a0bee663291f07fa69a1eecc5ecaff8031a934b5f7a96efca7ce",
          "withoutMetadata": "9debc1a0231b865cb61bf5e2e01cbb0f911dac09e632def0b9e1809a261a31e5",
          "linkedWithoutMetadata": "9debc1a0231b865cb61bf5e2e01cbb0f911dac09e632def0b9e1809a261a31e5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)46",
              "src": "contracts/SwapToken.sol:40"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:41"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)46": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:40",
        "version": {
          "withMetadata": "397cd0401f58e49a0118867b7d0d7c65a897fb84181be158b5701410e8d37045",
          "withoutMetadata": "1c40f307c2d7a3c023251666e92d563b9ec5b07e03ff043596a303180f1be682",
          "linkedWithoutMetadata": "1c40f307c2d7a3c023251666e92d563b9ec5b07e03ff043596a303180f1be682"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)46",
              "src": "contracts/SwapToken.sol:40"
            },
            {
              "contract": "SwapToken",
              "label": "contractAddressCurrent",
              "type": "t_address",
              "src": "contracts/SwapToken.sol:41"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)46": {
              "label": "contract ERC20Interface"
            },
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:40",
        "version": {
          "withMetadata": "da2649fef5c5e556e8dccf1656c45c6dbe87e6ae340bdd7f17da0e17a640663b",
          "withoutMetadata": "6c5e44245d471bcd745884a9d650ed72e2f77c2b21d1688e9ab522d876069a9a",
          "linkedWithoutMetadata": "6c5e44245d471bcd745884a9d650ed72e2f77c2b21d1688e9ab522d876069a9a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:41"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)46",
              "src": "contracts/SwapToken.sol:40"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)46": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "4c14a2251d908ffc61e32526dd66f40b25ab4f7c790a9f14ec8e607a27341e2c",
          "withoutMetadata": "dffdf64ee8a5b852e98867790edb47ab6e7192b0cac2191e6c08fb88e0d4b84b",
          "linkedWithoutMetadata": "dffdf64ee8a5b852e98867790edb47ab6e7192b0cac2191e6c08fb88e0d4b84b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "e3146a1e7ed5f0b0fad15580c663f90fd0aeb24ae17de8dae3c9cbb1de70d472",
          "withoutMetadata": "482eb39f20da7da15470b2894e826845626f99544f0ab39096643476faeb54da",
          "linkedWithoutMetadata": "482eb39f20da7da15470b2894e826845626f99544f0ab39096643476faeb54da"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "4c14a2251d908ffc61e32526dd66f40b25ab4f7c790a9f14ec8e607a27341e2c",
          "withoutMetadata": "dffdf64ee8a5b852e98867790edb47ab6e7192b0cac2191e6c08fb88e0d4b84b",
          "linkedWithoutMetadata": "dffdf64ee8a5b852e98867790edb47ab6e7192b0cac2191e6c08fb88e0d4b84b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "8551255d690886c2d09b0a4d6a0b01a979264da144b5985df6f21649dc274be0",
          "withoutMetadata": "83272e568c59af38b41c98a67e4333cdf002304dd71c11bbc5c0d143826a454b",
          "linkedWithoutMetadata": "83272e568c59af38b41c98a67e4333cdf002304dd71c11bbc5c0d143826a454b"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "faf2a61dbbcad3af245b208d919ae5e17b1a34a9f566dac2f7d826e0cf973b92",
          "withoutMetadata": "3a46122181b87263927fe6f8998bd199719d11fb5d2444603afcf8e16aabcb4c",
          "linkedWithoutMetadata": "3a46122181b87263927fe6f8998bd199719d11fb5d2444603afcf8e16aabcb4c"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "401ed7f03aaf3059aaef40db885900c2dc40f425012448ed62be1e8889ecfbd5",
          "withoutMetadata": "99b8c341fe97cbdb072995e40cb6857f0dd773ca0e26a963fb374a962f8868d6",
          "linkedWithoutMetadata": "99b8c341fe97cbdb072995e40cb6857f0dd773ca0e26a963fb374a962f8868d6"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "f0853e0cf40590939f09aa82b59e61bbdf712790f22cb1032dc0cd619161714c",
          "withoutMetadata": "14fcc435e946fc3b0b847b2895cbb84115cd44b72861bc4f75516565e1d01af8",
          "linkedWithoutMetadata": "14fcc435e946fc3b0b847b2895cbb84115cd44b72861bc4f75516565e1d01af8"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "7a10c8c9278520ec2a06b1c1100cf1aec6d87a32b5d7ae15823ced82ab46d6d1",
          "withoutMetadata": "94932b7223038fcc482fb978b1e73e5d27dd4daead2fe6a7d13354a73f3fa025",
          "linkedWithoutMetadata": "94932b7223038fcc482fb978b1e73e5d27dd4daead2fe6a7d13354a73f3fa025"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "4c14a2251d908ffc61e32526dd66f40b25ab4f7c790a9f14ec8e607a27341e2c",
          "withoutMetadata": "dffdf64ee8a5b852e98867790edb47ab6e7192b0cac2191e6c08fb88e0d4b84b",
          "linkedWithoutMetadata": "dffdf64ee8a5b852e98867790edb47ab6e7192b0cac2191e6c08fb88e0d4b84b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)922",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)922": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "0fc548395427b4053fcfb1070b3446cf0469fb546e124f18fd8d4c090aaeccf0",
          "withoutMetadata": "28fe4cad3962a0c7bcad53f4d47f9adb17cb2b511e58fc038eabaa49f666e9fd",
          "linkedWithoutMetadata": "28fe4cad3962a0c7bcad53f4d47f9adb17cb2b511e58fc038eabaa49f666e9fd"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "4869ab937652dc5afadd2e50d9009652629dc3e02a4425a29527dd13016b8087",
          "withoutMetadata": "1229ae71d0c89e95ab3db611856c590eb17fcf511be7557e82d3b000b83e0bd7",
          "linkedWithoutMetadata": "1229ae71d0c89e95ab3db611856c590eb17fcf511be7557e82d3b000b83e0bd7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)37",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)37": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "4c14a2251d908ffc61e32526dd66f40b25ab4f7c790a9f14ec8e607a27341e2c",
          "withoutMetadata": "dffdf64ee8a5b852e98867790edb47ab6e7192b0cac2191e6c08fb88e0d4b84b",
          "linkedWithoutMetadata": "dffdf64ee8a5b852e98867790edb47ab6e7192b0cac2191e6c08fb88e0d4b84b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "test()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)922",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)922": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "9af9573d69a49e44d3edb3204c12ac668679f223a1763a839bae99d01de203fb",
          "withoutMetadata": "e864644c72aec562045bee6e245eb1f581ce59e65cbcf1777736437c44de5d81",
          "linkedWithoutMetadata": "e864644c72aec562045bee6e245eb1f581ce59e65cbcf1777736437c44de5d81"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "test()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "c305192f1fd480bc31792cc0f323e012b376391495491f113e3cd3657e54ca87",
          "withoutMetadata": "c84617f016f37f614861d59e300d843e97378e4d3f1c66755faaab80114454a3",
          "linkedWithoutMetadata": "c84617f016f37f614861d59e300d843e97378e4d3f1c66755faaab80114454a3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)32",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)32": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "94e062fa8f0d83cfff76069a7865235fda2188526bcc4471f0f58962266b2491",
          "withoutMetadata": "c261af7b4ec89b8c859657f1a60197a4ee12ad76a2ffbd16aa42aa89a8af12d9",
          "linkedWithoutMetadata": "c261af7b4ec89b8c859657f1a60197a4ee12ad76a2ffbd16aa42aa89a8af12d9"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)35",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)35": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "95c0f05df1ec6a3bfa064a2d8aad335e4815428e2ab42de6ae1412a2611352ff",
          "withoutMetadata": "5b64408b044195d2e836e64749b3fd114e71fe12c7147cb6b539ee9485fcd999",
          "linkedWithoutMetadata": "5b64408b044195d2e836e64749b3fd114e71fe12c7147cb6b539ee9485fcd999"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)35",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)35": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "e648c589a9701e08f3d3d1f700e5bfd8047fd9040ff7650d6f937129540bd07f",
          "withoutMetadata": "8ec8f4695315b2c35ac5d9e71abad8f308fd16921e502c652150c2196c3bb183",
          "linkedWithoutMetadata": "8ec8f4695315b2c35ac5d9e71abad8f308fd16921e502c652150c2196c3bb183"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)32",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)32": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "46a945da6dedfed9aa04105d8b2dfb621b913a0611dab70542422ac05951521d",
          "withoutMetadata": "a6ed197b415baa80f5460968672f7f8185fdbe8694a2929d3e7b5c19cda43e54",
          "linkedWithoutMetadata": "a6ed197b415baa80f5460968672f7f8185fdbe8694a2929d3e7b5c19cda43e54"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve2(address,uint256)",
          "allowance2(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)32",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)32": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "a5d5bd30c8a420e6c93c21ba1b54fd1c7d9d7c1ec383a6824b1144f0e5f3dcd0",
          "withoutMetadata": "616b58b151ad552077eb5a85919ddd845b9d7854c2972da7a9921f1fb9674150",
          "linkedWithoutMetadata": "616b58b151ad552077eb5a85919ddd845b9d7854c2972da7a9921f1fb9674150"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)",
          "approve2(address,uint256)",
          "allowance2(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)32",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)32": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "ef1b9a1c6030a1a1c5f9a929b09bade98e1be040f9f69712e512c68896083151",
          "withoutMetadata": "12871504680c9753eac039e996cc72b9b68e9ab7aee462a563fbaa35d01876bb",
          "linkedWithoutMetadata": "12871504680c9753eac039e996cc72b9b68e9ab7aee462a563fbaa35d01876bb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve2(address,uint256)",
          "allowance2(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)31",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)31": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "1aacb1027978b47ee5acd9889fcfefe9fb349fc4334a9acffd20e7aa4cab777b",
          "withoutMetadata": "b3df220e635c33435fab001ebbc9a245b32c1d5639fbd904d16ffe9e842d9487",
          "linkedWithoutMetadata": "b3df220e635c33435fab001ebbc9a245b32c1d5639fbd904d16ffe9e842d9487"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)31",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)31": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "a4c1555709cd47770344dd1d57ac949309516a8e6abfde07c362ec19e3f9b6b1",
          "withoutMetadata": "3a246c0cd1a64a8fcc0967d6942207c0cea797c1d13fbc88c12bc2ece4cb81e7",
          "linkedWithoutMetadata": "3a246c0cd1a64a8fcc0967d6942207c0cea797c1d13fbc88c12bc2ece4cb81e7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)31",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)31": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "9e171ab8b0063f9e316bc657234b1fa1a2fb13907fef51f2bca76f6e55a1241a",
          "withoutMetadata": "9e2934e5b6767411c9f09c2f7e4f0f4a82588e7b4271d6aa5e013e6665bf8805",
          "linkedWithoutMetadata": "9e2934e5b6767411c9f09c2f7e4f0f4a82588e7b4271d6aa5e013e6665bf8805"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)31",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)31": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "3f675b513e01c540da4bd28ad6f8eb297815974eff612bb70615b00a136a1d43",
          "withoutMetadata": "f2bf319115a9011a94e7a5a7fd80e290bccf55e3de2bdac3b9e12761e838f391",
          "linkedWithoutMetadata": "f2bf319115a9011a94e7a5a7fd80e290bccf55e3de2bdac3b9e12761e838f391"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)31",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)31": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "255efd2c35ba9d4e0a4c117f0b6823415a108807b6cc72c031344f67d15f9f4b",
          "withoutMetadata": "3a246c0cd1a64a8fcc0967d6942207c0cea797c1d13fbc88c12bc2ece4cb81e7",
          "linkedWithoutMetadata": "3a246c0cd1a64a8fcc0967d6942207c0cea797c1d13fbc88c12bc2ece4cb81e7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)31",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)31": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "8cfc0bc1a858cea424ca0f45f33133795e9221aae35116020c3b3da33c8950c6",
          "withoutMetadata": "f2bf319115a9011a94e7a5a7fd80e290bccf55e3de2bdac3b9e12761e838f391",
          "linkedWithoutMetadata": "f2bf319115a9011a94e7a5a7fd80e290bccf55e3de2bdac3b9e12761e838f391"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)32",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)32": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:13",
        "version": {
          "withMetadata": "335b77a7cf66713ef4e64a67a8fd558452e5e70f36edfba7f28fe187d0647bd1",
          "withoutMetadata": "6bb40de045c19959e5346ae4238d3db1e6fe54e62f7537bacac2498d53bd51d9",
          "linkedWithoutMetadata": "6bb40de045c19959e5346ae4238d3db1e6fe54e62f7537bacac2498d53bd51d9"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)33",
              "src": "contracts/SwapToken.sol:14"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)33": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "0ef2c6e5cbdef07059583a1dadc62e6f57c8db0151bfa91f3e1abd976ca461f4",
          "withoutMetadata": "f2bf319115a9011a94e7a5a7fd80e290bccf55e3de2bdac3b9e12761e838f391",
          "linkedWithoutMetadata": "f2bf319115a9011a94e7a5a7fd80e290bccf55e3de2bdac3b9e12761e838f391"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)31",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)31": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "60bddad104ca4d2111beb7ac63e2320c9d6774408eaafb7afea2328353e4add2",
          "withoutMetadata": "f2bf319115a9011a94e7a5a7fd80e290bccf55e3de2bdac3b9e12761e838f391",
          "linkedWithoutMetadata": "f2bf319115a9011a94e7a5a7fd80e290bccf55e3de2bdac3b9e12761e838f391"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)20",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)20": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "b8e519e68460b4109bd8d0c260a9be9780271c75966fe66759eacdab395e9bc8",
          "withoutMetadata": "f2bf319115a9011a94e7a5a7fd80e290bccf55e3de2bdac3b9e12761e838f391",
          "linkedWithoutMetadata": "f2bf319115a9011a94e7a5a7fd80e290bccf55e3de2bdac3b9e12761e838f391"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)11",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)11": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "version": {
          "withMetadata": "42870d1ea2cfcad3c714cc2b4ed5bafb5737ab3043649f3c86c74ee5e2b67352",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "82a689b50c1594308f24d765f5448ec2d152e57738b565678ffdb96aeee1e5b1",
          "withoutMetadata": "f2bf319115a9011a94e7a5a7fd80e290bccf55e3de2bdac3b9e12761e838f391",
          "linkedWithoutMetadata": "f2bf319115a9011a94e7a5a7fd80e290bccf55e3de2bdac3b9e12761e838f391"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SwapToken",
            "src": "contracts/SwapToken.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)2",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)2": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "version": {
          "withMetadata": "c6d09ac1fd27c575107ec90a58ec5ccc9d0e76440222926ce3e0a479beca6dbd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "cafb449afc8226504946f6856c576495ce771f3373d0c13c4d0fda41d7ea02d2",
          "withoutMetadata": "90a491f88938d3a742faeb480a7827c50d4f311c6d65273d39e4fa6b4b9733c3",
          "linkedWithoutMetadata": "90a491f88938d3a742faeb480a7827c50d4f311c6d65273d39e4fa6b4b9733c3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)2",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)2": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "version": {
          "withMetadata": "8417f2641da9bd9fc1d0f3798dd3c80b34813e8cebabcc9476e1741c3cc4d744",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "2d1f8667ae806366a48437c0c6d9398cde0e74de5652dce01eb23fcc0e3248c6",
          "withoutMetadata": "90a491f88938d3a742faeb480a7827c50d4f311c6d65273d39e4fa6b4b9733c3",
          "linkedWithoutMetadata": "90a491f88938d3a742faeb480a7827c50d4f311c6d65273d39e4fa6b4b9733c3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)2",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)2": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "version": {
          "withMetadata": "1b62804e0c8b863f4b820f680fd0ba7038774f6aeb9ce844dcd9938b84de4c1a",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "8b8dd9c03a7bde7c5647c518b8e56e9447036d9beabc8d97893edc2a02ce8fab",
          "withoutMetadata": "90a491f88938d3a742faeb480a7827c50d4f311c6d65273d39e4fa6b4b9733c3",
          "linkedWithoutMetadata": "90a491f88938d3a742faeb480a7827c50d4f311c6d65273d39e4fa6b4b9733c3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)2",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)2": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "version": {
          "withMetadata": "388758f1e383ca2927b7b4f4db2dd4aa1b2b1f5c80697d05d8bd5dd2378aad32",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "a9caeeacd5181be9d70c3e262e006e81a39980add41f3cc26713de1614e8c65d",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)2",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)2": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "version": {
          "withMetadata": "c6d09ac1fd27c575107ec90a58ec5ccc9d0e76440222926ce3e0a479beca6dbd",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "cafb449afc8226504946f6856c576495ce771f3373d0c13c4d0fda41d7ea02d2",
          "withoutMetadata": "90a491f88938d3a742faeb480a7827c50d4f311c6d65273d39e4fa6b4b9733c3",
          "linkedWithoutMetadata": "90a491f88938d3a742faeb480a7827c50d4f311c6d65273d39e4fa6b4b9733c3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)2",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)2": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "version": {
          "withMetadata": "d2f9bdfd4c34ba7a9e7e4714aa8ef16c54a6feca2159c9a6ca0b3bc946a2f3e0",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "073d5d458686bda0a3261522ed43e3fc95e603a62a759e76a4d6a90239541c00",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)2",
              "src": "contracts/SwapToken.sol:11"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)2": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:4",
        "version": {
          "withMetadata": "5b191fd062258ca7d7f820f944762a45bf56db8e041a6f759f51d9fc7431048f",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "e9400d41fa90c1eecf669f9ff8f534cdaa5ca92072424e7c00aa2c09db506712",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "SwapToken": {
        "src": "contracts/SwapToken.sol:10",
        "version": {
          "withMetadata": "fe28dfbd0aae2d18f556955d8e37c2dc2236c8f57d18a164688b945b304d9e0c",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20Interface": {
        "src": "contracts/SwapToken.sol:5",
        "version": {
          "withMetadata": "b3c55413fac822930dfb885faf5cd3ecd71274bd91d7dfbf7018a280764d4a84",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:11",
        "version": {
          "withMetadata": "d8eeda4625b8c62926394eea31b779afee0889e8fe8ebd0f7d174d94c1f1fd44",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "SwapToken",
              "label": "erc20Interface",
              "type": "t_contract(ERC20Interface)2",
              "src": "contracts/SwapToken.sol:12"
            }
          ],
          "types": {
            "t_contract(ERC20Interface)2": {
              "label": "contract ERC20Interface"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "a4d13bc8ee09f1c41a6bafecb2578e3dbeb9d0d2270bd62d6fd6815547b0b7ad",
          "withoutMetadata": "3d440df016fa7a3d5776c91bda94e59e41e7bcbd543242ea87b2a188b931f921",
          "linkedWithoutMetadata": "3d440df016fa7a3d5776c91bda94e59e41e7bcbd543242ea87b2a188b931f921"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "ed829289c0868878592ab8edc6b48f6b1914f9dfda8880d30725a57db977b004",
          "withoutMetadata": "358e4c3d7b3b51ac464a779f04ef3fb8175e7b6de5a5812a546bc335af8b129a",
          "linkedWithoutMetadata": "358e4c3d7b3b51ac464a779f04ef3fb8175e7b6de5a5812a546bc335af8b129a"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "7926849b3d6c1ebeee76eaafb98a6b4a133315b372b7a2067fc738c4552ea627",
          "withoutMetadata": "5fcd0629c680599582f22def2b5373ce0db4c69138bff0fc43ba48b7144fd601",
          "linkedWithoutMetadata": "5fcd0629c680599582f22def2b5373ce0db4c69138bff0fc43ba48b7144fd601"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "fcf7f9461d50a6a71627a267874c88383c9145557cee2874daf41830fa9c57e3",
          "withoutMetadata": "7d5925d030c957a302cb0554195e13aa4507b179e594929ee655c84a2ee775a4",
          "linkedWithoutMetadata": "7d5925d030c957a302cb0554195e13aa4507b179e594929ee655c84a2ee775a4"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_deadline",
              "type": "t_uint256",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:24"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "93601aa43a1f37a733828dd88ea36ca9c71a48ad2c3d33f67ac2f9fd1cb2e45c",
          "withoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042",
          "linkedWithoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV2": {
        "src": "contracts/YutengV2.sol:5",
        "version": {
          "withMetadata": "b9d998911c36bba1456d7b0ddeba4eeeecac46c0c91da1fbe729b40d84a3e3f4",
          "withoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a",
          "linkedWithoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "setsCcore(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV2",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV2.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "fcf7f9461d50a6a71627a267874c88383c9145557cee2874daf41830fa9c57e3",
          "withoutMetadata": "7d5925d030c957a302cb0554195e13aa4507b179e594929ee655c84a2ee775a4",
          "linkedWithoutMetadata": "7d5925d030c957a302cb0554195e13aa4507b179e594929ee655c84a2ee775a4"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_deadline",
              "type": "t_uint256",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:24"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "93601aa43a1f37a733828dd88ea36ca9c71a48ad2c3d33f67ac2f9fd1cb2e45c",
          "withoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042",
          "linkedWithoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV2": {
        "src": "contracts/YutengV2.sol:5",
        "version": {
          "withMetadata": "b9d998911c36bba1456d7b0ddeba4eeeecac46c0c91da1fbe729b40d84a3e3f4",
          "withoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a",
          "linkedWithoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "setsCcore(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV2",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV2.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "fcf7f9461d50a6a71627a267874c88383c9145557cee2874daf41830fa9c57e3",
          "withoutMetadata": "7d5925d030c957a302cb0554195e13aa4507b179e594929ee655c84a2ee775a4",
          "linkedWithoutMetadata": "7d5925d030c957a302cb0554195e13aa4507b179e594929ee655c84a2ee775a4"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_deadline",
              "type": "t_uint256",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:24"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "334a51444cf85569c25c15322381a44a1a5f4f56d035b38608efb5eaef5e918f",
          "withoutMetadata": "a3e182aafbc23e6e530e2369f4cfa52a6a73c98398da103cac2b326484f68793",
          "linkedWithoutMetadata": "a3e182aafbc23e6e530e2369f4cfa52a6a73c98398da103cac2b326484f68793"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_deadline",
              "type": "t_uint256",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:24"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "7d0fb62d828d3d18085cb4c05ce34b1904900a01ccefabb1873f5aeeca9e8d2b",
          "withoutMetadata": "48b3af464fe19d4d76d5f5f7a759f349e32db830871db5bc0ff40ff405e02942",
          "linkedWithoutMetadata": "48b3af464fe19d4d76d5f5f7a759f349e32db830871db5bc0ff40ff405e02942"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_deadline",
              "type": "t_uint256",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:24"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "6e243f6624c064ac77702676191bfe9053e7d0b1b9d4e19e6088e804067adaeb",
          "withoutMetadata": "29bcc24eebc7ee1c6abdafbda98477ec931dd0db00b9a6cf86f3f80161e025fe",
          "linkedWithoutMetadata": "29bcc24eebc7ee1c6abdafbda98477ec931dd0db00b9a6cf86f3f80161e025fe"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_deadline",
              "type": "t_uint256",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:24"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "b924e3cc2d2da07253c7ad5edceead1d934c9c2ca760f9d0a250077a666bc292",
          "withoutMetadata": "260964d267e8de9997980ae469f0cc93092290f94075ec00e91ce67c7a53027c",
          "linkedWithoutMetadata": "260964d267e8de9997980ae469f0cc93092290f94075ec00e91ce67c7a53027c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_deadline",
              "type": "t_uint256",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:24"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "6e243f6624c064ac77702676191bfe9053e7d0b1b9d4e19e6088e804067adaeb",
          "withoutMetadata": "29bcc24eebc7ee1c6abdafbda98477ec931dd0db00b9a6cf86f3f80161e025fe",
          "linkedWithoutMetadata": "29bcc24eebc7ee1c6abdafbda98477ec931dd0db00b9a6cf86f3f80161e025fe"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_deadline",
              "type": "t_uint256",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:24"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "24e70309a8e3020f2aa220015f3e87f29e982067e95f0bb9d022e033c44808c0",
          "withoutMetadata": "98d6de4db53b76cd4451cead2f25134105179f531f5bdb17c9f8fdd107b41917",
          "linkedWithoutMetadata": "98d6de4db53b76cd4451cead2f25134105179f531f5bdb17c9f8fdd107b41917"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_deadline",
              "type": "t_uint256",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:24"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "70af25f951a4478fd31faa38b37008feb62f2e2a8d8e148a57d81320ae647bdf",
          "withoutMetadata": "73895503cfb3d1bae29f093deeded85017838b4376fed915d8fc5a1eca3e5583",
          "linkedWithoutMetadata": "73895503cfb3d1bae29f093deeded85017838b4376fed915d8fc5a1eca3e5583"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Timers",
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "292edaf235d55c2feeca4c3bf5eac05d1cbde0c25033a2ec8e5b038effb273d9",
          "withoutMetadata": "83ff8e746a3312c66796be0e812503561ec3697a04174ac5c4dea7071c9910bb",
          "linkedWithoutMetadata": "83ff8e746a3312c66796be0e812503561ec3697a04174ac5c4dea7071c9910bb"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "Timers"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Timers": {
        "src": "@openzeppelin/contracts/utils/Timers.sol:8",
        "version": {
          "withMetadata": "221f3f53017ec2461cb7af528fa2b4c796c339efbf0c1885225290e4e8434221",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "647877bc9247eca15c36d153118dd87dc3c882bb03d30413204797de1bcef1f6",
          "withoutMetadata": "83ff8e746a3312c66796be0e812503561ec3697a04174ac5c4dea7071c9910bb",
          "linkedWithoutMetadata": "83ff8e746a3312c66796be0e812503561ec3697a04174ac5c4dea7071c9910bb"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:34"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:16"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:19"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "08455b133e4a9b2aa80488058feeec9e84f6fcd7180eedfcc635adef35bfb830",
          "withoutMetadata": "83ff8e746a3312c66796be0e812503561ec3697a04174ac5c4dea7071c9910bb",
          "linkedWithoutMetadata": "83ff8e746a3312c66796be0e812503561ec3697a04174ac5c4dea7071c9910bb"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()",
          "depositMiningByEndDate()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_deposit",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            },
            {
              "contract": "Yuteng",
              "label": "_mining",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "3941d10b81da327eb0f408fc33101a168e11aa3d7fd34e8a1a075f05642c3b8c",
          "withoutMetadata": "f63f8cafd4a47171a2b901ad00eb876663af9d07e57227b373e50e93aea6e5ad",
          "linkedWithoutMetadata": "f63f8cafd4a47171a2b901ad00eb876663af9d07e57227b373e50e93aea6e5ad"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "9e3dbeb235213cdf78bff014e0cf51697d8ab2498474e813c2a3767aa3a4da4b",
          "withoutMetadata": "62e3dc9921a9d47f963ff4e530734c77e1b9e5afbf22bab872414f495b6bf355",
          "linkedWithoutMetadata": "62e3dc9921a9d47f963ff4e530734c77e1b9e5afbf22bab872414f495b6bf355"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            },
            {
              "contract": "Yuteng",
              "label": "_userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "9ca6e33c3e43756b2a4f49874db4df19b7480301fb11a292ecc99ea637e2e0ff",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "59e0162299fb6bdffc3c075702d92d74585ee0d7054e37604dfae745b798cb35",
          "withoutMetadata": "d8c683bd4f00fb9f3187d478bfff78edb54590b9b05fadf5bbd95ef443031e25",
          "linkedWithoutMetadata": "d8c683bd4f00fb9f3187d478bfff78edb54590b9b05fadf5bbd95ef443031e25"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:16"
            },
            {
              "contract": "Yuteng",
              "label": "_userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "9ca6e33c3e43756b2a4f49874db4df19b7480301fb11a292ecc99ea637e2e0ff",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "00718cba391a773cd3f0f4e75174a2336f0cc3645a3840eaec4b3bf62035bdcf",
          "withoutMetadata": "9c021e60867e75b536a934b96c65a98dbed9dbb4fdc8723a0c1fb2df86981811",
          "linkedWithoutMetadata": "9c021e60867e75b536a934b96c65a98dbed9dbb4fdc8723a0c1fb2df86981811"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:16"
            },
            {
              "contract": "Yuteng",
              "label": "_userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "9ca6e33c3e43756b2a4f49874db4df19b7480301fb11a292ecc99ea637e2e0ff",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "d361a1d1a032e223fd5dddd0e18cdcf7407dc44514cd9dc8d37c4ab75593d498",
          "withoutMetadata": "c591b28d91abd568d3d76b0a856a35dfe5c780c4c7e60b9df1cc6f1cd8d3d011",
          "linkedWithoutMetadata": "c591b28d91abd568d3d76b0a856a35dfe5c780c4c7e60b9df1cc6f1cd8d3d011"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:16"
            },
            {
              "contract": "Yuteng",
              "label": "_userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:15",
        "version": {
          "withMetadata": "9ca6e33c3e43756b2a4f49874db4df19b7480301fb11a292ecc99ea637e2e0ff",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:13",
        "version": {
          "withMetadata": "1baa9f676e4a8336108cd3173f862136ec986d42857f796e08a5ca0d360874d4",
          "withoutMetadata": "725060711ee6d35c0dacd3f39cc54ba539063528438525a4223382cb58c88862",
          "linkedWithoutMetadata": "725060711ee6d35c0dacd3f39cc54ba539063528438525a4223382cb58c88862"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:16"
            },
            {
              "contract": "Yuteng",
              "label": "_userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/Yuteng.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "3d3e0f7d6d3d67b32735dcaf70ffa333d9d5be228ef1a0b194676fa029e17b96",
          "withoutMetadata": "50b70f8816d91a872ca56d491313fdd88ba28a51270f95c301e66aa6f7eaa036",
          "linkedWithoutMetadata": "50b70f8816d91a872ca56d491313fdd88ba28a51270f95c301e66aa6f7eaa036"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "75f388b1938adb295b71580cf31c362a1108ca13369a56e1c01430c5669da3fd",
          "withoutMetadata": "b76e4570748d11236cb47daa3d0994e17532368964e9c036b8d0782efec1fd88",
          "linkedWithoutMetadata": "b76e4570748d11236cb47daa3d0994e17532368964e9c036b8d0782efec1fd88"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "78c65142dc8dbdf4bcd5a16daf87f2dc9c8bdb35f4842c23b35cf3bce18bf3d4",
          "withoutMetadata": "1c5acf0af68a27170a3bbace25bf7a6b4d80e43be14dc714c322d0abce4af0df",
          "linkedWithoutMetadata": "1c5acf0af68a27170a3bbace25bf7a6b4d80e43be14dc714c322d0abce4af0df"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "5d8006df83c33c2e01993b0c5ebf25305958ce7eaf506b8b5570ce6c453c2a0b",
          "withoutMetadata": "fd8c004aebff3c3f12542a92ab57103c17b3bd4714fd50131e03d122cc5d1849",
          "linkedWithoutMetadata": "fd8c004aebff3c3f12542a92ab57103c17b3bd4714fd50131e03d122cc5d1849"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "2a94d833fd647128c469e8e77340a21afdb537e8e48517ed54342d0f885334c1",
          "withoutMetadata": "b5d98a7eb1b01160cb1fc0990792a991fcdaaef1e8bf4f74c1952c3e44c93dff",
          "linkedWithoutMetadata": "b5d98a7eb1b01160cb1fc0990792a991fcdaaef1e8bf4f74c1952c3e44c93dff"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "7b402d45f688e9f4307faa209ccbb9c47c8f873010c527663c5fe6105f8fc9b8",
          "withoutMetadata": "b5d98a7eb1b01160cb1fc0990792a991fcdaaef1e8bf4f74c1952c3e44c93dff",
          "linkedWithoutMetadata": "b5d98a7eb1b01160cb1fc0990792a991fcdaaef1e8bf4f74c1952c3e44c93dff"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "4800049c4b0593dcfbe6b510f76b7b4e04b5e801ef2d0b2941c6eca4a8a75eec",
          "withoutMetadata": "01a1415a5399360fcf6f916203d18362d53fe57ac3d34cf7febd580771bb41f4",
          "linkedWithoutMetadata": "01a1415a5399360fcf6f916203d18362d53fe57ac3d34cf7febd580771bb41f4"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "1d97691f1cbc9909ca9e8b1071c98f1ac7957fe889ba5cc53ec4f65645386ab5",
          "withoutMetadata": "737374762c10fd95ff44201f0a203d3213dfd45a7f3837d712cc850115331ab4",
          "linkedWithoutMetadata": "737374762c10fd95ff44201f0a203d3213dfd45a7f3837d712cc850115331ab4"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()",
          "exchangeToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "de325897ddb68f4e8b0277b8045c6aff354c53a65ca358c95c409118dd10226d",
          "withoutMetadata": "ad23ad9339555383810cb86f08547425889c5e02c70a42a8ef7086bd8862b862",
          "linkedWithoutMetadata": "ad23ad9339555383810cb86f08547425889c5e02c70a42a8ef7086bd8862b862"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "4f690dc39206d5de5143e24f8bcf75a874dbdb69a20733abbf52fc17aaf0136d",
          "withoutMetadata": "3ba2f077ba7372eacc5c0ae9c7165bd9313e07f71fd9f125fa34e69754528180",
          "linkedWithoutMetadata": "3ba2f077ba7372eacc5c0ae9c7165bd9313e07f71fd9f125fa34e69754528180"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "ee56b46d27e4e4cf7652aa3242f1e4d3399ca581a295cd55055d1c4b13c788c3",
          "withoutMetadata": "8681b1edfbb257164092bac337ddccf5307ef036986b536b0735148d6ad8274e",
          "linkedWithoutMetadata": "8681b1edfbb257164092bac337ddccf5307ef036986b536b0735148d6ad8274e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "b4b3a474a20fc0e2efc0136780f9c7c1d3d415e2687070af78e669e28464017c",
          "withoutMetadata": "19863f61bb490da0d929a22b70d1f7aaedf508ea21ef480744cb65b4cfdfb157",
          "linkedWithoutMetadata": "19863f61bb490da0d929a22b70d1f7aaedf508ea21ef480744cb65b4cfdfb157"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "cc23f028a7f43cbc7603925091ad542e4b5e4b842ecf3cffd4e7d1d312017db4",
          "withoutMetadata": "eb993748f4cec57c386e5f56916c2d24978954067be681d03a52d81a6f65cd53",
          "linkedWithoutMetadata": "eb993748f4cec57c386e5f56916c2d24978954067be681d03a52d81a6f65cd53"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "07dc9dae54399721bd2fa09700a4b0fff9f458cb26e9cd42d4691bc710ab581e",
          "withoutMetadata": "c5fb5f59945a200fc585fb1150d82a9235eba058b3bef67d18a6e9093255477d",
          "linkedWithoutMetadata": "c5fb5f59945a200fc585fb1150d82a9235eba058b3bef67d18a6e9093255477d"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "1d8fca76a217e9f2ecd292e2c2838ab90c5a3d0e2705c1775c2f46c4f6a57a9c",
          "withoutMetadata": "b6d97c836bf4c7f4efc61e1ba5c9904d930401452338e75b0e62d9085fe214f4",
          "linkedWithoutMetadata": "b6d97c836bf4c7f4efc61e1ba5c9904d930401452338e75b0e62d9085fe214f4"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "92ff26e20e5dd31c4e7fc99077753b659b061020ab2d74111a2b9322dd4fd4eb",
          "withoutMetadata": "4cbb757697b63d456cc209d73328b2d12466ba8cef2427ffbedd9f4faeb814c5",
          "linkedWithoutMetadata": "4cbb757697b63d456cc209d73328b2d12466ba8cef2427ffbedd9f4faeb814c5"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "10b70986a7edb88fce55c080592c7b96b524e2925e9c6ad9453ca39869d3a52b",
          "withoutMetadata": "7d3ddbb3413afdb4984db06edf109658b6abb0dfd8f0e28b974d21fb5768770e",
          "linkedWithoutMetadata": "7d3ddbb3413afdb4984db06edf109658b6abb0dfd8f0e28b974d21fb5768770e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Yuteng",
              "label": "_owner",
              "type": "t_address",
              "src": "contracts/Yuteng.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "3f78271e754bbba2e4add52c83e8155ce32cbd1ca0797b1c1f932070cbdf959a",
          "withoutMetadata": "7d3ddbb3413afdb4984db06edf109658b6abb0dfd8f0e28b974d21fb5768770e",
          "linkedWithoutMetadata": "7d3ddbb3413afdb4984db06edf109658b6abb0dfd8f0e28b974d21fb5768770e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "eb25c8d752378fd4df7dac5f16664e9a299fa087eacb862b2bdbd878b00dbab4",
          "withoutMetadata": "eb6952d3db9e406cce34b0277be9ecb43ae0cfb2015d5abaa905b719d8a6628f",
          "linkedWithoutMetadata": "eb6952d3db9e406cce34b0277be9ecb43ae0cfb2015d5abaa905b719d8a6628f"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "676d0bf9c4f7acb64ffa9ceeeabb7cda6902c320ada17ad7f507309995b80252",
          "withoutMetadata": "eb6952d3db9e406cce34b0277be9ecb43ae0cfb2015d5abaa905b719d8a6628f",
          "linkedWithoutMetadata": "eb6952d3db9e406cce34b0277be9ecb43ae0cfb2015d5abaa905b719d8a6628f"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "96547ca59be4a8d758d5141b5d261164458eb27378ea1847298e4883f7c00718",
          "withoutMetadata": "63d8daf763513de4feb2e143d08d7d9bb831335b14984beda3da0ee409079f7f",
          "linkedWithoutMetadata": "63d8daf763513de4feb2e143d08d7d9bb831335b14984beda3da0ee409079f7f"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "6a37c7aef638cac8a7140661e3de914acd9a68de335302182f677d969c6df793",
          "withoutMetadata": "e936c48da0dcdbe78f6e2d95018272587fdfd611be4860f806f836c018c1af97",
          "linkedWithoutMetadata": "e936c48da0dcdbe78f6e2d95018272587fdfd611be4860f806f836c018c1af97"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "32755ba8308a90513b7a9be7c5354cd791b6b1e85b52e908dfe7e4985ecb3aa7",
          "withoutMetadata": "72f14f3242477ef27d12a7211cf4894c8f2fb271fc63ac54e1c4e7672bfc5c47",
          "linkedWithoutMetadata": "72f14f3242477ef27d12a7211cf4894c8f2fb271fc63ac54e1c4e7672bfc5c47"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:12",
        "version": {
          "withMetadata": "4bb5ced7886bc3c8cdb8a80fd14d3e66aaae9c97652ea4eb612febc5fdbdf309",
          "withoutMetadata": "c3c6daf409cab4b1ba26aafcadd6e5e6483f6a9caf0b4a3f4f0b4b7fe6173317",
          "linkedWithoutMetadata": "c3c6daf409cab4b1ba26aafcadd6e5e6483f6a9caf0b4a3f4f0b4b7fe6173317"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:18"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:11",
        "version": {
          "withMetadata": "f1c5c65aa69b8c90665ed0e05ada1edf879fe9e61f4006ff336f908617d27d51",
          "withoutMetadata": "7d3ddbb3413afdb4984db06edf109658b6abb0dfd8f0e28b974d21fb5768770e",
          "linkedWithoutMetadata": "7d3ddbb3413afdb4984db06edf109658b6abb0dfd8f0e28b974d21fb5768770e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:11",
        "version": {
          "withMetadata": "99dc723cf99a9152654ca2b12b32b5c21860afe482973124f3f37c99fd8a213c",
          "withoutMetadata": "981a47ff4ca48b0dd17da48d952525b154c12ea46921939ee8c6d6e28e816f5a",
          "linkedWithoutMetadata": "981a47ff4ca48b0dd17da48d952525b154c12ea46921939ee8c6d6e28e816f5a"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:11",
        "version": {
          "withMetadata": "911750127ca0633f5fe36d1ee3e93f9522cdadf4311e99576df828ef2ba97e89",
          "withoutMetadata": "542f7494c2a3b8a4d1d4fe1fbab9ce80f2b0b52204ba7e0dcff7f44361e54132",
          "linkedWithoutMetadata": "542f7494c2a3b8a4d1d4fe1fbab9ce80f2b0b52204ba7e0dcff7f44361e54132"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:11",
        "version": {
          "withMetadata": "ca16e875d93c4e638115b8d61afd18cf019d03e830dfc2336a6f2e2986ae811b",
          "withoutMetadata": "e1d0957a817d0c09e8406133a74a5e0c0a34e8aa9963a07287ac6654dea12da4",
          "linkedWithoutMetadata": "e1d0957a817d0c09e8406133a74a5e0c0a34e8aa9963a07287ac6654dea12da4"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:11",
        "version": {
          "withMetadata": "c78ce1e3c4b0071a889e7dafbabc1106e06074b4a4bfb7829373325a2a6c9e41",
          "withoutMetadata": "dac78197c12af432d8869b06408d5aa1b48109a4f963ceebcbce35d1d460b673",
          "linkedWithoutMetadata": "dac78197c12af432d8869b06408d5aa1b48109a4f963ceebcbce35d1d460b673"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:11",
        "version": {
          "withMetadata": "23c224fa2f454c5104c0723fdca7c983f8b1451e529909b62a48c2a05da4a397",
          "withoutMetadata": "707b7853221bcb7c5c0a36bdee659dc60451e04b3fd36b65b9a1e8f133d3f9cf",
          "linkedWithoutMetadata": "707b7853221bcb7c5c0a36bdee659dc60451e04b3fd36b65b9a1e8f133d3f9cf"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:11",
        "version": {
          "withMetadata": "b810583cec18a1e97caa2fdbe112b432c00464c4e7de5125c3d33d1e203d6780",
          "withoutMetadata": "af43848b14d55e17093bc5ebffe6c41b7acf18a7ecef13bb09f8ef1d0b3c5f53",
          "linkedWithoutMetadata": "af43848b14d55e17093bc5ebffe6c41b7acf18a7ecef13bb09f8ef1d0b3c5f53"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:11",
        "version": {
          "withMetadata": "cc10250c470d99410cf9039398797fecab139417fb9be72839a43a6100ba71fe",
          "withoutMetadata": "313cddcb646379a0b86e0d0b4e8bb7d61665d8fa79abf801c039cb72a17a07f9",
          "linkedWithoutMetadata": "313cddcb646379a0b86e0d0b4e8bb7d61665d8fa79abf801c039cb72a17a07f9"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:11",
        "version": {
          "withMetadata": "440d2307064cea38305774825acde686dd26dd284723b8cb9b2eee31f1667a3a",
          "withoutMetadata": "7596b7d32627b01a3cc03988b7360344c66dfdaba80aa5a206d5df34d190f634",
          "linkedWithoutMetadata": "7596b7d32627b01a3cc03988b7360344c66dfdaba80aa5a206d5df34d190f634"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:11",
        "version": {
          "withMetadata": "c9602c293d4af890f9ac43f9f26823f668fb3887d45b8cd956fedf6b3a29a8e8",
          "withoutMetadata": "8504e208079479187b640696bf743a10e7bcfe94ad1fe00d323b9e00ecfc1e5b",
          "linkedWithoutMetadata": "8504e208079479187b640696bf743a10e7bcfe94ad1fe00d323b9e00ecfc1e5b"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:17"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:10",
        "version": {
          "withMetadata": "6dbaf849089369942bb76f1fc529f5ddf65a32cc90d763c3bfa41391ed2f7c97",
          "withoutMetadata": "7d3ddbb3413afdb4984db06edf109658b6abb0dfd8f0e28b974d21fb5768770e",
          "linkedWithoutMetadata": "7d3ddbb3413afdb4984db06edf109658b6abb0dfd8f0e28b974d21fb5768770e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:10",
        "version": {
          "withMetadata": "417cab0bbb60bebf9e81678c558ea63741796b9db9f42528daa0922be7072c48",
          "withoutMetadata": "a1ff073f128a6d62e873c68f8009d6d04dc4fa314fa4d46c4813a90e74c4670c",
          "linkedWithoutMetadata": "a1ff073f128a6d62e873c68f8009d6d04dc4fa314fa4d46c4813a90e74c4670c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:15"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:10",
        "version": {
          "withMetadata": "d865960261d3d945ffc983474c3500de9922ad585fe16926d3c89d6c383a7264",
          "withoutMetadata": "8780d041774d7523a2e351632ab6661d79131a373d2079dddf634231a0790aa1",
          "linkedWithoutMetadata": "8780d041774d7523a2e351632ab6661d79131a373d2079dddf634231a0790aa1"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:15"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:7",
        "version": {
          "withMetadata": "2e6dfbff1fce91867e7962fa3523107aeaab27fab83979b7f988425692271c03",
          "withoutMetadata": "8780d041774d7523a2e351632ab6661d79131a373d2079dddf634231a0790aa1",
          "linkedWithoutMetadata": "8780d041774d7523a2e351632ab6661d79131a373d2079dddf634231a0790aa1"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:7",
        "version": {
          "withMetadata": "4fb5161966c86bbe60ea64deaefad2b8ec8c161def043ce27b0c4915b3586681",
          "withoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7",
          "linkedWithoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Yuteng": {
        "src": "contracts/Yuteng.sol:7",
        "version": {
          "withMetadata": "1e40531506eac3882b96d8779da5c841c4484d75973ae05fda8d0015046f1648",
          "withoutMetadata": "1b0c12eaa3ebe8c4592e64b81e2f921f870cd5ba60a6af147c2fb7dd671542e7",
          "linkedWithoutMetadata": "1b0c12eaa3ebe8c4592e64b81e2f921f870cd5ba60a6af147c2fb7dd671542e7"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Yuteng",
            "src": "contracts/Yuteng.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "YuTengToken": {
        "src": "contracts/YutengToken.sol:7",
        "version": {
          "withMetadata": "310b7c85f74995d013491cb8f88879837658147cb66bcf4b9576f75ee92a37e0",
          "withoutMetadata": "1b0c12eaa3ebe8c4592e64b81e2f921f870cd5ba60a6af147c2fb7dd671542e7",
          "linkedWithoutMetadata": "1b0c12eaa3ebe8c4592e64b81e2f921f870cd5ba60a6af147c2fb7dd671542e7"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YuTengToken",
            "src": "contracts/YutengToken.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "YuTengToken": {
        "src": "contracts/YutengToken.sol:7",
        "version": {
          "withMetadata": "6e1e06bbf58894b56eff1308456b86fe92e6a4dd011c2173ebb1f215b9862229",
          "withoutMetadata": "61af855565a53c5132b7e4c17c64ef07b196e48d2317f9f7a7bfb0a40ee84370",
          "linkedWithoutMetadata": "61af855565a53c5132b7e4c17c64ef07b196e48d2317f9f7a7bfb0a40ee84370"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YuTengToken",
            "src": "contracts/YutengToken.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "YuTengToken": {
        "src": "contracts/YutengToken.sol:7",
        "version": {
          "withMetadata": "67f32ddc4f1ecae7256dad477dc0794588c2200a37ec4fa729d9e39fd10d171c",
          "withoutMetadata": "e672ef0abccd84a28f95fa43ecaa78b01f638831b3866f05da138ef8c28b3911",
          "linkedWithoutMetadata": "e672ef0abccd84a28f95fa43ecaa78b01f638831b3866f05da138ef8c28b3911"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YuTengToken",
            "src": "contracts/YutengToken.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "YuTengToken": {
        "src": "contracts/YutengToken.sol:7",
        "version": {
          "withMetadata": "67f32ddc4f1ecae7256dad477dc0794588c2200a37ec4fa729d9e39fd10d171c",
          "withoutMetadata": "e672ef0abccd84a28f95fa43ecaa78b01f638831b3866f05da138ef8c28b3911",
          "linkedWithoutMetadata": "e672ef0abccd84a28f95fa43ecaa78b01f638831b3866f05da138ef8c28b3911"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YuTengToken",
            "src": "contracts/YutengToken.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "YuTengToken": {
        "src": "contracts/YutengToken.sol:7",
        "version": {
          "withMetadata": "749e2dc83f07af10842045c72750c69c547f86ea24a889709445a86c1d6c5ff8",
          "withoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7",
          "linkedWithoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YuTengToken",
            "src": "contracts/YutengToken.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "YuTengToken": {
        "src": "contracts/YutengToken.sol:7",
        "version": {
          "withMetadata": "749e2dc83f07af10842045c72750c69c547f86ea24a889709445a86c1d6c5ff8",
          "withoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7",
          "linkedWithoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YuTengToken",
            "src": "contracts/YutengToken.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "YuTengToken": {
        "src": "contracts/YutengToken.sol:7",
        "version": {
          "withMetadata": "749e2dc83f07af10842045c72750c69c547f86ea24a889709445a86c1d6c5ff8",
          "withoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7",
          "linkedWithoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YuTengToken",
            "src": "contracts/YutengToken.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "YuTengToken": {
        "src": "contracts/YutengToken.sol:7",
        "version": {
          "withMetadata": "749e2dc83f07af10842045c72750c69c547f86ea24a889709445a86c1d6c5ff8",
          "withoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7",
          "linkedWithoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YuTengToken",
            "src": "contracts/YutengToken.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "YuTengToken": {
        "src": "contracts/YutengToken.sol:7",
        "version": {
          "withMetadata": "749e2dc83f07af10842045c72750c69c547f86ea24a889709445a86c1d6c5ff8",
          "withoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7",
          "linkedWithoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YuTengToken",
            "src": "contracts/YutengToken.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "8312288cbde91e536d7a6c1421c7acb275ccf90fa864ca3ec4a671d3c46ce513",
          "withoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724",
          "linkedWithoutMetadata": "575c5160413ce582addde4a211c5258ab8c1045af2eeee360192553893308724"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC20",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "contract": "ERC20",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "contract": "ERC20",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "contract": "ERC20",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "contract": "ERC20",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "YutengToken": {
        "src": "contracts/YutengToken.sol:7",
        "version": {
          "withMetadata": "6f1cc0bec14758ca5c8134b861244575bf9244837597b6c96c595505bcde1dda",
          "withoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7",
          "linkedWithoutMetadata": "7bf51376a1e9f9f473cf092bfa335c3de4e1c05d014c0f03ca0110b178dd93e7"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YutengToken",
            "src": "contracts/YutengToken.sol:8"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "YutengV2": {
        "src": "contracts/YutengV2.sol:5",
        "version": {
          "withMetadata": "b9d998911c36bba1456d7b0ddeba4eeeecac46c0c91da1fbe729b40d84a3e3f4",
          "withoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a",
          "linkedWithoutMetadata": "6bf853a3cb9a2801fe62ac2e9da83b5a6ae21a331486d82d9feca8d075392c0a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "setsCcore(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV2",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV2.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "93601aa43a1f37a733828dd88ea36ca9c71a48ad2c3d33f67ac2f9fd1cb2e45c",
          "withoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042",
          "linkedWithoutMetadata": "005681b10ce294d81ceaa9ecb88f13ca174dcd159ed06c90a3f1991896564042"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "YutengV2": {
        "src": "contracts/YutengV2.sol:5",
        "version": {
          "withMetadata": "059abd464e88b32e693638e69bce6155e4119fc6b333b13d41519deeeda3c634",
          "withoutMetadata": "3b7e93981320dec5019096083f47131342d268463e422f8187c14dbbaa8e2f0c",
          "linkedWithoutMetadata": "3b7e93981320dec5019096083f47131342d268463e422f8187c14dbbaa8e2f0c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()",
          "setsCcore(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV2",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV2.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "ea18b1c7d77e0b01a52d31008c23bf0bc2ceccb8e315ecf67ff32a661ba6d2f0",
          "withoutMetadata": "68ddcfa3026ae912ccd241b867eb47d630984a36c52b73539801948ad167a397",
          "linkedWithoutMetadata": "68ddcfa3026ae912ccd241b867eb47d630984a36c52b73539801948ad167a397"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "YutengV2": {
        "src": "contracts/YutengV2.sol:5",
        "version": {
          "withMetadata": "5bddee7fe857af06d06111ca0b7fdea45d0972b1417dab7b56ef90dc49b6e4e0",
          "withoutMetadata": "ae83ac0bd1a4f73e92754ebd953586a000e474d7a31596677b30e11c7a88612c",
          "linkedWithoutMetadata": "ae83ac0bd1a4f73e92754ebd953586a000e474d7a31596677b30e11c7a88612c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setsCcore(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV2",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV2.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "f110410261fd2d11b56631ed6d55cc0b0d5d22d23cd8ac1e770a1982b337778d",
          "withoutMetadata": "68ddcfa3026ae912ccd241b867eb47d630984a36c52b73539801948ad167a397",
          "linkedWithoutMetadata": "68ddcfa3026ae912ccd241b867eb47d630984a36c52b73539801948ad167a397"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "YutengV1": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "d5a67fec4c0f1bd95ceeb8036dc52c1a9ec6e14e4823f8e1ee360b86685a4d57",
          "withoutMetadata": "b9f245ff8745b2079d4c39158a4b4dac12a26085b23a4dc48c63133c11843c89",
          "linkedWithoutMetadata": "b9f245ff8745b2079d4c39158a4b4dac12a26085b23a4dc48c63133c11843c89"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "score",
            "src": "contracts/YutengV1.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "YutengV1",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "Demo": {
        "src": "contracts/YutengV1.sol:5",
        "version": {
          "withMetadata": "7e3a8a7a2a6d6ad47ba5894701146e6954f79f947fd0ab3a8b8e04fa97a8178b",
          "withoutMetadata": "b9f245ff8745b2079d4c39158a4b4dac12a26085b23a4dc48c63133c11843c89",
          "linkedWithoutMetadata": "b9f245ff8745b2079d4c39158a4b4dac12a26085b23a4dc48c63133c11843c89"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "score",
            "src": "contracts/YutengV1.sol:6"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "Demo",
              "label": "score",
              "type": "t_uint256",
              "src": "contracts/YutengV1.sol:6"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}